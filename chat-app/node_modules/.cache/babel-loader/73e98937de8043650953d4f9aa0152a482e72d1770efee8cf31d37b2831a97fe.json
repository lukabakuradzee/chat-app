{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/Home/Search.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport { personInfo } from '../../api/users';\nimport { RingLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [toggleSearch, setToggleSearch] = useState(false);\n  // const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [personInfoData, setPersonInfoData] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false);\n  const [storedSearchResults, setStoredSearchResults] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const person = await personInfo();\n        setPersonInfoData(person);\n      } catch (error) {\n        setError('Error fetching person data' + error.msg);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEscapeKeyHandler(() => {\n    setToggleSearch(false);\n    if (!searchPerformed) {\n      setSearchResults(storedSearchResults); // Restore stored search results\n    }\n  });\n  const handleSearchInputChange = e => {\n    const input = e.target.value;\n    setSearchInput(input);\n    if (input.trim() === '') {\n      setSearchResults([]);\n      return;\n    }\n    const searchTerm = input.toLowerCase();\n    const filteredPersons = personInfoData.filter(person => person.name.toLowerCase().includes(searchTerm));\n    setSearchResults(filteredPersons);\n    setSearchPerformed(true);\n  };\n  const toggleClickSearch = () => {\n    setToggleSearch(prevState => {\n      if (!prevState && !searchPerformed) {\n        setSearchResults([]); // Clear search results when closing modal if search was not performed\n      } else if (prevState) {\n        setStoredSearchResults(searchResults);\n      }\n      return !prevState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-loader\",\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(RingLoader, {\n        color: \"#fe3c72\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa-solid fa-magnifying-glass search-messages-icon\",\n      onClick: toggleClickSearch,\n      title: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `search-modal-content ${toggleSearch ? 'show' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"search-header-text\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search\",\n            onChange: handleSearchInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: toggleSearch && searchResults.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: person.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"4B4x8c1d55xx3y8Bj8icqdUjA1Q=\", false, function () {\n  return [useEscapeKeyHandler];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useEscapeKeyHandler","personInfo","RingLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","toggleSearch","setToggleSearch","error","setError","personInfoData","setPersonInfoData","searchInput","setSearchInput","searchResults","setSearchResults","searchPerformed","setSearchPerformed","storedSearchResults","setStoredSearchResults","fetchData","person","msg","setLoading","handleSearchInputChange","e","input","target","value","trim","searchTerm","toLowerCase","filteredPersons","filter","name","includes","toggleClickSearch","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","className","style","color","onClick","title","type","placeholder","onChange","map","src","avatar","alt","id","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/Home/Search.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport { personInfo } from '../../api/users';\nimport { RingLoader } from 'react-spinners';\n\nconst Search = () => {\n  const [toggleSearch, setToggleSearch] = useState(false);\n  // const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [personInfoData, setPersonInfoData] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchPerformed, setSearchPerformed] = useState(false);\n  const [storedSearchResults, setStoredSearchResults] = useState([]);\n\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const person = await personInfo();\n        setPersonInfoData(person);\n      } catch (error) {\n        setError('Error fetching person data' + error.msg);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n\n  useEscapeKeyHandler(() => {\n    setToggleSearch(false);\n    if (!searchPerformed) {\n      setSearchResults(storedSearchResults); // Restore stored search results\n    }\n  });\n\n  const handleSearchInputChange = (e) => {\n    const input = e.target.value;\n    setSearchInput(input);\n\n    if (input.trim() === '') {\n      setSearchResults([]);\n      return;\n    }\n\n    const searchTerm = input.toLowerCase();\n    const filteredPersons = personInfoData.filter((person) =>\n      person.name.toLowerCase().includes(searchTerm),\n    );\n    setSearchResults(filteredPersons);\n    setSearchPerformed(true);\n  };\n\n  const toggleClickSearch = () => {\n    setToggleSearch((prevState) => {\n      if (!prevState && !searchPerformed) {\n        setSearchResults([]); // Clear search results when closing modal if search was not performed\n      } else if (prevState) {\n        setStoredSearchResults(searchResults)\n      }\n      return !prevState\n    });\n  };\n\n  return (\n    <>\n      {error && <h1>{error}</h1>}\n      {loading && (\n        <div className=\"bar-loader\" style={{}}>\n          <RingLoader color=\"#fe3c72\" />\n        </div>\n      )}\n      <i\n        className=\"fa-solid fa-magnifying-glass search-messages-icon\"\n        onClick={toggleClickSearch}\n        title=\"Search\"\n      ></i>\n      <div className={`search-modal-content ${toggleSearch ? 'show' : ''}`}>\n        <div className=\"search-header\">\n          <h2 className=\"search-header-text\">Search</h2>\n          <div className=\"search-box-modal\">\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={handleSearchInputChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"search-results\">\n        {toggleSearch &&\n          searchResults.map((person) => (\n            <div key={person.id} className=\"person-result\">\n              <div className=\"person-img-container\">\n                <img src={person.avatar} alt=\"\" />\n              </div>\n              <h3>{person.name}</h3>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}