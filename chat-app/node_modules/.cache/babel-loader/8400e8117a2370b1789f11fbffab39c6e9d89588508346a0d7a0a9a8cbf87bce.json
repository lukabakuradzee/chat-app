{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nimport { AUTHENTICATE, LOG_IN, LOG_OUT } from './constants';\nimport { toggleLocalStorage } from '../../utils/jwt';\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  upd\n};\nconst reducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case LOG_IN:\n      {\n        const {\n          token\n        } = payload;\n        const user = jwtDecode(token);\n        toggleLocalStorage(token);\n        return {\n          isAuthenticated: true,\n          user\n        };\n      }\n    case LOG_OUT:\n      {\n        toggleLocalStorage();\n        return {\n          isAuthenticated: false,\n          user: null\n        };\n      }\n    case AUTHENTICATE:\n      {\n        const user = jwtDecode(payload);\n        return {\n          isAuthenticated: true,\n          user\n        };\n      }\n    case UPDATE_USER_INFO:\n      {\n        const updateUser = {\n          ...state.user,\n          ...payload\n        };\n        return {\n          ...state,\n          user: updateUser\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport { initialState, reducer };","map":{"version":3,"names":["jwtDecode","AUTHENTICATE","LOG_IN","LOG_OUT","toggleLocalStorage","initialState","isAuthenticated","user","upd","reducer","state","action","type","payload","token","UPDATE_USER_INFO","updateUser"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/context/auth/reducer.js"],"sourcesContent":["import { jwtDecode } from 'jwt-decode';\nimport { AUTHENTICATE, LOG_IN, LOG_OUT } from './constants';\nimport { toggleLocalStorage } from '../../utils/jwt';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  upd\n};\n\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOG_IN: {\n      const { token } = payload;\n      const user = jwtDecode(token);\n      toggleLocalStorage(token);\n      return { isAuthenticated: true, user };\n    }\n    case LOG_OUT: {\n      toggleLocalStorage();\n      return { isAuthenticated: false, user: null };\n    }\n\n    case AUTHENTICATE: {\n      const user = jwtDecode(payload);\n      return { isAuthenticated: true, user };\n    }\n    case UPDATE_USER_INFO: {\n      const updateUser = {...state.user, ...payload}\n        return {...state, user: updateUser}\n      }\n      default: \n      return state;\n    }\n\n  }\nexport { initialState, reducer };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,YAAY,EAAEC,MAAM,EAAEC,OAAO,QAAQ,aAAa;AAC3D,SAASC,kBAAkB,QAAQ,iBAAiB;AAEpD,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAChD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKV,MAAM;MAAE;QACX,MAAM;UAAEY;QAAM,CAAC,GAAGD,OAAO;QACzB,MAAMN,IAAI,GAAGP,SAAS,CAACc,KAAK,CAAC;QAC7BV,kBAAkB,CAACU,KAAK,CAAC;QACzB,OAAO;UAAER,eAAe,EAAE,IAAI;UAAEC;QAAK,CAAC;MACxC;IACA,KAAKJ,OAAO;MAAE;QACZC,kBAAkB,CAAC,CAAC;QACpB,OAAO;UAAEE,eAAe,EAAE,KAAK;UAAEC,IAAI,EAAE;QAAK,CAAC;MAC/C;IAEA,KAAKN,YAAY;MAAE;QACjB,MAAMM,IAAI,GAAGP,SAAS,CAACa,OAAO,CAAC;QAC/B,OAAO;UAAEP,eAAe,EAAE,IAAI;UAAEC;QAAK,CAAC;MACxC;IACA,KAAKQ,gBAAgB;MAAE;QACrB,MAAMC,UAAU,GAAG;UAAC,GAAGN,KAAK,CAACH,IAAI;UAAE,GAAGM;QAAO,CAAC;QAC5C,OAAO;UAAC,GAAGH,KAAK;UAAEH,IAAI,EAAES;QAAU,CAAC;MACrC;IACA;MACA,OAAON,KAAK;EACd;AAEF,CAAC;AACH,SAASL,YAAY,EAAEI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}