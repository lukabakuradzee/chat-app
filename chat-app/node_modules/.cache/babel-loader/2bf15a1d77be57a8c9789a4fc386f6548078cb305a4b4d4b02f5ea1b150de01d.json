{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/ForgetPassword/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { passwordRegex } from '../../utils/Regex';\nimport { BarLoader } from 'react-spinners';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [showForm, setShowForm] = useState(true);\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setErrorMessage(\"Passwords Don't Match!\");\n      return;\n    } else {\n      setErrorMessage('');\n    }\n    if (!passwordRegex.test(newPassword)) {\n      setErrorMessage(\"Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.\");\n      return;\n    }\n    try {\n      const data = await response.json();\n      setMessage(data.message);\n      setLoading(true);\n      setTimeout(() => {\n        navigate('/');\n      }, 2000);\n      setShowForm(false);\n    } catch (error) {\n      setMessage('Failed to change password');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      className: \"password-reset-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newPassword\",\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-reset-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-lock password-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), showPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-eye\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-eye-slash\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-reset-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-lock password-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), showPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-eye\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-eye-slash\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-loader\",\n        style: {},\n        children: /*#__PURE__*/_jsxDEV(BarLoader, {\n          color: \"#fe3c72\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 24\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"0mjJm/HdqqqsVFtuovtrX83n8FE=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","passwordRegex","BarLoader","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","loading","setLoading","message","setMessage","showForm","setShowForm","navigate","showPassword","setShowPassword","togglePasswordVisibility","prevShowPassword","handleResetPassword","e","preventDefault","test","data","response","json","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","autoComplete","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/ForgetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { passwordRegex } from '../../utils/Regex';\nimport { BarLoader } from 'react-spinners';\nimport { useNavigate } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('');\n  const [showForm, setShowForm] = useState(true)\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false)\n\n  const togglePasswordVisibility = () => {\n     setShowPassword((prevShowPassword) => (!prevShowPassword));\n  }\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n      if (newPassword !== confirmPassword) {\n        setErrorMessage(\"Passwords Don't Match!\");\n        return;\n      } else {\n         setErrorMessage('')\n      }\n\n      if(!passwordRegex.test(newPassword)) {\n        setErrorMessage(\"Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.\");\n        return;\n      }\n\n    try {\n\n      const data = await response.json();\n      setMessage(data.message)\n      setLoading(true);\n      setTimeout(() => {\n        navigate('/')\n      }, 2000);\n      setShowForm(false)\n    } catch (error) {\n      setMessage('Failed to change password');\n      console.error(error);\n    }\n  };\n\n  \n  return (\n    <div className=\"password-reset-container\">\n      <h2>Password Reset</h2>\n      {showForm && (\n      <form onSubmit={handleResetPassword} className=\"password-reset-form\">\n        <label htmlFor=\"newPassword\">New Password:</label>\n        <div className=\"password-reset-input\">\n        <i className=\"fa-solid fa-lock password-icon\"></i>\n        <input\n          type={showPassword ? \"text\" : \"password\"}\n          id=\"newPassword\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n          autoComplete='on'\n        />\n         {showPassword ? (\n                <i\n                  className=\"fa-solid fa-eye\"\n                  onClick={togglePasswordVisibility}\n                ></i>\n              ) : (\n                <i\n                  className=\"fa-solid fa-eye-slash\"\n                  onClick={togglePasswordVisibility}\n                ></i>\n              )}\n        </div>\n        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n        <div className=\"password-reset-input\">\n        <i className=\"fa-solid fa-lock password-icon\"></i>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          autoComplete='on'\n        />\n         {showPassword ? (\n                <i\n                  className=\"fa-solid fa-eye\"\n                  onClick={togglePasswordVisibility}\n                ></i>\n              ) : (\n                <i\n                  className=\"fa-solid fa-eye-slash\"\n                  onClick={togglePasswordVisibility}\n                ></i>\n              )}\n        </div>\n        \n        {loading && (\n        <div className=\"bar-loader\" style={{}}>\n          <BarLoader color=\"#fe3c72\" />\n        </div>\n      )}\n        <button type='submit' onClick={handleResetPassword}>Reset Password</button>\n      </form>\n      )}\n      {errorMessage && <p>{errorMessage}</p> }\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}