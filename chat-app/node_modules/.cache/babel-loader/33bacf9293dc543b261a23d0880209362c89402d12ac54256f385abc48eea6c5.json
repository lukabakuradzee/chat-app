{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/NewsFeed/Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [userDataResult, setUserDataResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [laoding, setlaoding] = useState(second);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const url = 'https://instagram120.p.rapidapi.com/api/instagram/profile';\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'X-RapidAPI-Key': '12eaa2c047msh237261d4664f961p17b89djsn90feffa1c8d3',\n          'X-RapidAPI-Host': 'instagram120.p.rapidapi.com'\n        },\n        body: JSON.stringify({\n          username: 'instagram'\n        })\n      };\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error('Failed to fetch');\n        }\n        const result = await response.json();\n        setUserDataResult(result);\n        console.log('result: ', result);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), userDataResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", userDataResult.content_type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"p3BHKziSWLSeHIrqOnP38ek1tic=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Feed","_s","userDataResult","setUserDataResult","error","setError","laoding","setlaoding","second","fetchUserData","url","options","method","headers","body","JSON","stringify","username","response","fetch","ok","Error","result","json","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","content_type","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/NewsFeed/Feed.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Feed = () => {\n  const [userDataResult, setUserDataResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [laoding, setlaoding] = useState(second)\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const url = 'https://instagram120.p.rapidapi.com/api/instagram/profile';\n      const options = {\n        method: 'POST',\n          headers: {\n            'content-type': 'application/json',\n            'X-RapidAPI-Key':\n              '12eaa2c047msh237261d4664f961p17b89djsn90feffa1c8d3',\n            'X-RapidAPI-Host': 'instagram120.p.rapidapi.com',\n          },\n        body: JSON.stringify({\n          username: 'instagram',\n        }),\n      };\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error('Failed to fetch');\n        }\n        const result = await response.json();\n        setUserDataResult(result);\n        console.log('result: ', result);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  return (\n    <div>\n      {error && <div>Error: {error}</div>}\n      {userDataResult && (\n        <div>\n          <p>Username: {userDataResult.content_type}</p>\n          {/* Add more user data properties here */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACW,MAAM,CAAC;EAE9CZ,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,GAAG,GAAG,2DAA2D;MACvE,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,MAAM;QACZC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,gBAAgB,EACd,oDAAoD;UACtD,iBAAiB,EAAE;QACrB,CAAC;QACHC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE;QACZ,CAAC;MACH,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAEC,OAAO,CAAC;QAC1C,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;QACpC;QACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCpB,iBAAiB,CAACmB,MAAM,CAAC;QACzBE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,MAAM,CAAC;MACjC,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACsB,OAAO,CAAC;MACzB;IACF,CAAC;IAEDjB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAA4B,QAAA,GACGvB,KAAK,iBAAIL,OAAA;MAAA4B,QAAA,GAAK,SAAO,EAACvB,KAAK;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAClC7B,cAAc,iBACbH,OAAA;MAAA4B,QAAA,eACE5B,OAAA;QAAA4B,QAAA,GAAG,YAAU,EAACzB,cAAc,CAAC8B,YAAY;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAhDID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAkDV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}