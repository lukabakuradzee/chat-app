{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/context/auth/AuthContextProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useReducer } from 'react';\nimport { initialState, reducer } from './reducer';\nimport { isTOkenValid } from '../../utils/jwt';\nimport { authenticateAction } from './actions';\nimport { createContext, useContext } from 'react';\nimport { updateUserProfile } from '../../api/auth';\nimport { logOutAction } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authContext = /*#__PURE__*/createContext();\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const authenticateUser = async () => {\n      const token = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (token && refreshToken) {\n        if (isTOkenValid(token) && isTOkenValid(refreshToken)) {\n          try {\n            const userData = await updateUserProfile(token); // Fetch user data using accessToken\n            dispatch(authenticateAction(token, refreshToken, userData));\n          } catch (error) {\n            console.error('Error fetching user data:', error);\n          }\n        } else {\n          dispatch(logOutAction());\n        }\n      }\n    };\n    authenticateUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthContextProvider;\nconst useAuthContext = () => {\n  _s2();\n  const AuthContext = useContext(authContext);\n  if (!AuthContext) {\n    throw new Error('auth context is not working');\n  }\n  return AuthContext;\n};\n_s2(useAuthContext, \"tfsuSMVOXk4a5neBgJjOa+ptw8Y=\");\nexport { AuthContextProvider, useAuthContext, authContext };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["useEffect","useReducer","initialState","reducer","isTOkenValid","authenticateAction","createContext","useContext","updateUserProfile","logOutAction","jsxDEV","_jsxDEV","authContext","AuthContextProvider","children","_s","state","dispatch","authenticateUser","token","localStorage","getItem","refreshToken","userData","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthContext","_s2","AuthContext","Error","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/context/auth/AuthContextProvider.jsx"],"sourcesContent":["import { useEffect, useReducer } from 'react';\nimport { initialState, reducer } from './reducer';\nimport { isTOkenValid } from '../../utils/jwt';\nimport { authenticateAction } from './actions';\nimport { createContext, useContext } from 'react';\nimport { updateUserProfile } from '../../api/auth';\nimport { logOutAction } from './actions';\nconst authContext = createContext();\nconst AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const authenticateUser = async () => {\n      const token = localStorage.getItem('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      \n      if (token && refreshToken) {\n        if (isTOkenValid(token) && isTOkenValid(refreshToken)) {\n          try {\n            const userData = await updateUserProfile(token); // Fetch user data using accessToken\n            dispatch(authenticateAction(token, refreshToken, userData));\n          } catch (error) {\n            console.error('Error fetching user data:', error);\n          }\n        } else {\n          dispatch(logOutAction());\n        }\n      }\n    };\n\n    authenticateUser();\n  }, []);\n\n\n  \n\n  return (\n    <authContext.Provider value={{ state, dispatch }}>\n      {children}\n    </authContext.Provider>\n  );\n};\n\nconst useAuthContext = () => {\n  const AuthContext = useContext(authContext);\n  if (!AuthContext) {\n    throw new Error('auth context is not working');\n  }\n  return AuthContext;\n};\n\nexport { AuthContextProvider, useAuthContext, authContext };\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAASC,YAAY,EAAEC,OAAO,QAAQ,WAAW;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,kBAAkB,QAAQ,WAAW;AAC9C,SAASC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AACnC,MAAMO,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,UAAU,CAACE,OAAO,EAAED,YAAY,CAAC;EAE3DF,SAAS,CAAC,MAAM;IACd,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACjD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAEzD,IAAIF,KAAK,IAAIG,YAAY,EAAE;QACzB,IAAIlB,YAAY,CAACe,KAAK,CAAC,IAAIf,YAAY,CAACkB,YAAY,CAAC,EAAE;UACrD,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAMf,iBAAiB,CAACW,KAAK,CAAC,CAAC,CAAC;YACjDF,QAAQ,CAACZ,kBAAkB,CAACc,KAAK,EAAEG,YAAY,EAAEC,QAAQ,CAAC,CAAC;UAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;UACnD;QACF,CAAC,MAAM;UACLP,QAAQ,CAACR,YAAY,CAAC,CAAC,CAAC;QAC1B;MACF;IACF,CAAC;IAEDS,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAKN,oBACEP,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC9CA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CAjCIF,mBAAmB;AAAAmB,EAAA,GAAnBnB,mBAAmB;AAmCzB,MAAMoB,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,WAAW,GAAG5B,UAAU,CAACK,WAAW,CAAC;EAC3C,IAAI,CAACuB,WAAW,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOD,WAAW;AACpB,CAAC;AAACD,GAAA,CANID,cAAc;AAQpB,SAASpB,mBAAmB,EAAEoB,cAAc,EAAErB,WAAW;AAAG,IAAAoB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}