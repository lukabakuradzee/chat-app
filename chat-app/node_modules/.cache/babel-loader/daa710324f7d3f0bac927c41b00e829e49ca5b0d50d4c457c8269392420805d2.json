{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { updateUserProfile } from '../../api/auth';\nimport { updateUserDataAction } from '../../context/auth/actions';\nimport { passwordRegex } from '../../utils/Regex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [message, setMessage] = useState('');\n  const [formData, setFormData] = useState({\n    username: user.username || '',\n    name: user.name || '',\n    lastName: user.lastName || '',\n    age: user.age || '',\n    email: user.email || ''\n  });\n  const [passwordData, setPasswordData] = useState({\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const handleChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  }, []);\n  const handlePasswordChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPasswordData(prevPasswordData => ({\n      ...prevPasswordData,\n      [name]: value\n    }));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!passwordRegex.test(passwordData)) {\n        throw new Error('Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number, and one special character');\n      }\n      if (passwordData.newPassword !== passwordData.confirmPassword) {\n        throw new Error(\"Passwords don't match\");\n      }\n      const updatedData = {\n        ...formData,\n        // Include other form data\n        password: passwordData.newPassword // Send newPassword as password\n      };\n      await updateUserProfile(user.userId, updatedData);\n      dispatch(updateUserDataAction(updatedData));\n      console.log('Form Data: ', updatedData);\n      setMessage('Successfully updated profile information');\n      if (updatedData.password) {\n        setMessage(\"Password updated Successfully\");\n        return;\n      }\n    } catch (error) {\n      console.error('Failed to update user profile:', error);\n      setMessage(error.message);\n      return;\n    }\n  };\n  useEffect(() => {\n    console.log('Component Re-Rendered', user);\n    const userFromStorage = JSON.parse(localStorage.getItem('user'));\n    if (userFromStorage) {\n      setFormData({\n        username: userFromStorage.username || '',\n        name: userFromStorage.name || '',\n        lastName: userFromStorage.lastName || '',\n        age: userFromStorage.age || '',\n        email: userFromStorage.email || ''\n      });\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-info-modal-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.entries(formData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs-update-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: key.includes('Password') ? 'password' : 'text',\n          id: key,\n          name: key,\n          value: value,\n          onChange: handleChange,\n          disabled: key === 'username',\n          autoComplete: key === 'password' ? 'on' : 'off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            name: \"newPassword\",\n            value: passwordData.newPassword,\n            onChange: handlePasswordChange,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: passwordData.confirmPassword,\n            onChange: handlePasswordChange,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInfo, \"2rK2L8QXcC91ExTJ6tTsUtGG7YU=\", false, function () {\n  return [useAuthContext];\n});\n_c = UserInfo;\nexport default UserInfo;\nvar _c;\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuthContext","updateUserProfile","updateUserDataAction","passwordRegex","jsxDEV","_jsxDEV","UserInfo","_s","state","dispatch","user","message","setMessage","formData","setFormData","username","name","lastName","age","email","passwordData","setPasswordData","newPassword","confirmPassword","handleChange","e","value","target","prevFormData","handlePasswordChange","prevPasswordData","handleSubmit","preventDefault","test","Error","updatedData","password","userId","console","log","error","userFromStorage","JSON","parse","localStorage","getItem","className","children","onSubmit","Object","entries","map","key","htmlFor","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","type","includes","id","onChange","disabled","autoComplete","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { updateUserProfile } from '../../api/auth';\nimport { updateUserDataAction } from '../../context/auth/actions';\nimport { passwordRegex } from '../../utils/Regex';\n\nconst UserInfo = () => {\n  const { state, dispatch } = useAuthContext();\n  const { user } = state;\n  const [message, setMessage] = useState('');\n  const [formData, setFormData] = useState({\n    username: user.username || '',\n    name: user.name || '',\n    lastName: user.lastName || '',\n    age: user.age || '',\n    email: user.email || '',\n  });\n  const [passwordData, setPasswordData] = useState({\n    newPassword: '',\n    confirmPassword: '',\n  })\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  }, []);\n\nconst handlePasswordChange = useCallback((e) => {\n  const {name, value} = e.target;\n  setPasswordData((prevPasswordData) => ({\n    ...prevPasswordData,\n    [name]: value,\n  }))\n}, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if(!passwordRegex.test(passwordData)) {\n        throw new Error('Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number, and one special character')\n      }\n      if(passwordData.newPassword !== passwordData.confirmPassword) {\n        throw new Error(\"Passwords don't match\")\n      }\n      \n      const updatedData = {\n        ...formData, // Include other form data\n        password: passwordData.newPassword, // Send newPassword as password\n      };\n      await updateUserProfile(user.userId, updatedData);\n      dispatch(updateUserDataAction(updatedData));\n      console.log('Form Data: ', updatedData);\n      setMessage('Successfully updated profile information');\n      if(updatedData.password) {\n        setMessage(\"Password updated Successfully\");\n        return;\n      }\n     \n    } catch (error) {\n      console.error('Failed to update user profile:', error);\n      setMessage(error.message)\n      return;\n    }\n  };\n\n\n  useEffect(() => {\n    console.log('Component Re-Rendered', user);\n    const userFromStorage = JSON.parse(localStorage.getItem('user'));\n    if (userFromStorage) {\n      setFormData({\n        username: userFromStorage.username || '',\n        name: userFromStorage.name || '',\n        lastName: userFromStorage.lastName || '',\n        age: userFromStorage.age || '',\n        email: userFromStorage.email || '',\n      });\n    }\n  }, [user]);\n\n  return (\n    <div className=\"user-info-modal-wrapper\">\n      <form onSubmit={handleSubmit}>\n        {Object.entries(formData).map(([key, value]) => (\n          <div className=\"form-inputs-update-profile\" key={key}>\n            <label htmlFor={key}>\n              {key.charAt(0).toUpperCase() + key.slice(1)}:\n            </label>\n            <input\n              type={key.includes('Password') ? 'password' : 'text'}\n              id={key}\n              name={key}\n              value={value}\n              onChange={handleChange}\n              disabled={key === 'username'}\n              autoComplete={key === 'password' ? 'on' : 'off'}\n            />\n          </div>\n        ))}\n        <div className=\"password-section\">\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"newPassword\">New Password:</label>\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              name=\"newPassword\"\n              value={passwordData.newPassword}\n              onChange={handlePasswordChange}\n              autoComplete='true'\n            />\n          </div>\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={passwordData.confirmPassword}\n              onChange={handlePasswordChange}\n              autoComplete='true'\n            />\n          </div>\n        </div>\n        <button type=\"submit\">Save Changes</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default UserInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}