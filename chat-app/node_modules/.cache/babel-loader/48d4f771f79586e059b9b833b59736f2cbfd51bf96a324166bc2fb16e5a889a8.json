{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserComment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { postUserComment } from '../../api/services/userServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserComment = ({\n  postId\n}) => {\n  _s();\n  const {\n    state\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [commentText, setCommentText] = useState('');\n  const [userComments, setUserComments] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // useEffect(() => {\n  //   const fetchComments = async () => {\n  //     setLoading(true);\n  //     try {\n  //       const comments = await postUserComment(postId);\n  //       setUserComments(comments);\n  //     } catch (error) {\n  //       setError(error.message);\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   fetchComments();\n  // }, [postId]);\n\n  const handleUserComment = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      console.log(\"Post id: \", postId);\n      const newComment = await postUserComment(postId, user.userId, commentText);\n      setUserComments(prevComments => [...prevComments, newComment]);\n      console.log('Comment: ', newComment);\n      console.log(\"User Comments: \", prevComments);\n      setCommentText('');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-list\",\n      children: userComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [comment.username, \": \", comment.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: commentText,\n        onChange: e => setCommentText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserComment,\n        disabled: loading,\n        children: loading ? 'Posting...' : 'Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(UserComment, \"sLwnyLRLFtjlNjYAjtTd9cdr/Ak=\", false, function () {\n  return [useAuthContext];\n});\n_c = UserComment;\nexport default UserComment;\nvar _c;\n$RefreshReg$(_c, \"UserComment\");","map":{"version":3,"names":["React","useState","useEffect","useAuthContext","postUserComment","jsxDEV","_jsxDEV","UserComment","postId","_s","state","user","commentText","setCommentText","userComments","setUserComments","error","setError","loading","setLoading","handleUserComment","console","log","newComment","userId","prevComments","message","className","children","map","comment","index","username","text","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserComment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { postUserComment } from '../../api/services/userServices';\n\nconst UserComment = ({ postId }) => {\n  const { state } = useAuthContext();\n  const { user } = state;\n  const [commentText, setCommentText] = useState('');\n  const [userComments, setUserComments] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // useEffect(() => {\n  //   const fetchComments = async () => {\n  //     setLoading(true);\n  //     try {\n  //       const comments = await postUserComment(postId);\n  //       setUserComments(comments);\n  //     } catch (error) {\n  //       setError(error.message);\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   fetchComments();\n  // }, [postId]);\n\n  const handleUserComment = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      console.log(\"Post id: \", postId);\n      const newComment = await postUserComment(postId, user.userId, commentText);\n      setUserComments(prevComments => [...prevComments, newComment]);\n      console.log('Comment: ', newComment);\n      console.log(\"User Comments: \", prevComments)\n      setCommentText('');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"comment-component\">\n      <div className=\"comment-list\">\n        {userComments.map((comment, index) => (\n          <div className=\"comment-item\" key={index}>\n            <span>{comment.username}: {comment.text}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"comment-input\">\n        <input \n          type=\"text\" \n          placeholder=\"Add a comment...\" \n          value={commentText}\n          onChange={(e) => setCommentText(e.target.value)}\n        />\n        <button onClick={handleUserComment} disabled={loading}>\n          {loading ? 'Posting...' : 'Post'}\n        </button>\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n  );\n};\n\nexport default UserComment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}