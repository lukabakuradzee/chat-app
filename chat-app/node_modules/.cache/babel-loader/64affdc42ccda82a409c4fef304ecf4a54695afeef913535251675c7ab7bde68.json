{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/Notification/Notification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { notificationRead, userNotification } from '../../api/services/userServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notification({\n  notification,\n  onClose\n}) {\n  _s();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [notificationMarkAsRead, setNotificationMarkAsRead] = useState(false);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const fetchedNotifications = await userNotification();\n        setNotifications(fetchedNotifications);\n        console.log('Fetched Notifications: ', fetchedNotifications);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNotifications();\n  }, []);\n  const handleNotificationRead = async () => {\n    try {\n      const notificationIds = notifications.map(notification => notification._id);\n      const data = await notificationRead(notificationIds);\n      setNotificationMarkAsRead(data);\n      console.log(\"Not mark data: \", data);\n      setNotifications(prevNotifications => prevNotifications.map(notification => notificationIds.includes(notification._id) ? {\n        ...notification,\n        read: true\n      } : notification));\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNotificationRead,\n      children: \"Read\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-text\",\n          children: notification.sender.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" started following\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: notification.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: [\" \", notification.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Notification, \"uRtQTGf2arITxkSUITo/BdmsbWk=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","notificationRead","userNotification","jsxDEV","_jsxDEV","Notification","notification","onClose","_s","error","setError","loading","setLoading","notifications","setNotifications","notificationMarkAsRead","setNotificationMarkAsRead","fetchNotifications","fetchedNotifications","console","log","message","handleNotificationRead","notificationIds","map","_id","data","prevNotifications","includes","read","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","className","sender","username","content","style","color","type","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/Notification/Notification.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { notificationRead, userNotification } from '../../api/services/userServices';\n\nfunction Notification({notification, onClose}) {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [notificationMarkAsRead, setNotificationMarkAsRead] = useState(false);\n\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const fetchedNotifications = await userNotification();\n        setNotifications(fetchedNotifications);\n        console.log('Fetched Notifications: ', fetchedNotifications);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNotifications();\n\n  }, []);\n\n  const handleNotificationRead = async () => {\n     try {\n      const notificationIds = notifications.map((notification) => notification._id)\n      const data = await notificationRead(notificationIds);\n      setNotificationMarkAsRead(data)\n      console.log(\"Not mark data: \", data)\n      setNotifications((prevNotifications) =>\n        prevNotifications.map((notification) =>\n          notificationIds.includes(notification._id)\n            ? { ...notification, read: true }\n            : notification\n        )\n      );\n     } catch (error) {\n       setError(error.message)\n     } finally {\n       setLoading(false)\n     }\n    }\n\n\n  if (loading) return <p>loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h2>Notification</h2>\n      <button onClick={handleNotificationRead}>Read</button>\n      <ul>\n        {notifications.map((notification, index) => (\n          <li key={index}>\n            <span className='notification-text'>{notification.sender.username}</span>\n            <span> started following</span>\n            <span>{notification.content}</span>\n            <span style={{color:'red'}}> {notification.type}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Notification;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErF,SAASC,YAAYA,CAAC;EAACC,YAAY;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE3EC,SAAS,CAAC,MAAM;IACd,MAAMiB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFL,UAAU,CAAC,IAAI,CAAC;QAChBF,QAAQ,CAAC,EAAE,CAAC;QACZ,MAAMQ,oBAAoB,GAAG,MAAMhB,gBAAgB,CAAC,CAAC;QACrDY,gBAAgB,CAACI,oBAAoB,CAAC;QACtCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,oBAAoB,CAAC;MAC9D,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;MACzB,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,kBAAkB,CAAC,CAAC;EAEtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACH,MAAMC,eAAe,GAAGV,aAAa,CAACW,GAAG,CAAElB,YAAY,IAAKA,YAAY,CAACmB,GAAG,CAAC;MAC7E,MAAMC,IAAI,GAAG,MAAMzB,gBAAgB,CAACsB,eAAe,CAAC;MACpDP,yBAAyB,CAACU,IAAI,CAAC;MAC/BP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEM,IAAI,CAAC;MACpCZ,gBAAgB,CAAEa,iBAAiB,IACjCA,iBAAiB,CAACH,GAAG,CAAElB,YAAY,IACjCiB,eAAe,CAACK,QAAQ,CAACtB,YAAY,CAACmB,GAAG,CAAC,GACtC;QAAE,GAAGnB,YAAY;QAAEuB,IAAI,EAAE;MAAK,CAAC,GAC/BvB,YACN,CACF,CAAC;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;IACzB,CAAC,SAAS;MACRT,UAAU,CAAC,KAAK,CAAC;IACnB;EACD,CAAC;EAGH,IAAID,OAAO,EAAE,oBAAOP,OAAA;IAAA0B,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIzB,KAAK,EAAE,oBAAOL,OAAA;IAAA0B,QAAA,EAAIrB;EAAK;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACE9B,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB9B,OAAA;MAAQ+B,OAAO,EAAEb,sBAAuB;MAAAQ,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtD9B,OAAA;MAAA0B,QAAA,EACGjB,aAAa,CAACW,GAAG,CAAC,CAAClB,YAAY,EAAE8B,KAAK,kBACrChC,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAMiC,SAAS,EAAC,mBAAmB;UAAAP,QAAA,EAAExB,YAAY,CAACgC,MAAM,CAACC;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzE9B,OAAA;UAAA0B,QAAA,EAAM;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/B9B,OAAA;UAAA0B,QAAA,EAAOxB,YAAY,CAACkC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnC9B,OAAA;UAAMqC,KAAK,EAAE;YAACC,KAAK,EAAC;UAAK,CAAE;UAAAZ,QAAA,GAAC,GAAC,EAACxB,YAAY,CAACqC,IAAI;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAJhDE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC1B,EAAA,CAjEQH,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAmErB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}