{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nimport { AUTHENTICATE, GOOGLE_LOGIN, LOG_IN, LOG_OUT, UPDATE_USER_PROFILE } from './constants';\nimport { toggleLocalStorage } from '../../utils/jwt';\nconst initialState = {\n  isAuthenticated: false,\n  user: null\n};\nconst reducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case LOG_IN:\n    case GOOGLE_LOGIN:\n      {\n        if (payload !== null && payload !== void 0 && payload.token) {\n          const {\n            token,\n            refreshToken\n          } = payload;\n          const user = jwtDecode(token);\n          toggleLocalStorage(token, refreshToken);\n          return {\n            isAuthenticated: true,\n            user\n          };\n        } else {\n          console.error('Payload missing token');\n          return state;\n        }\n      }\n    case LOG_OUT:\n      {\n        toggleLocalStorage();\n        return {\n          isAuthenticated: false,\n          user: null\n        };\n      }\n    case AUTHENTICATE:\n      {\n        try {\n          const user = jwtDecode(payload);\n          return {\n            isAuthenticated: true,\n            user\n          };\n        } catch (error) {\n          console.error('Error decoding token: ', error);\n          return state;\n        }\n      }\n    case UPDATE_USER_PROFILE:\n      {\n        try {\n          const updatedUser = {\n            ...state.user,\n            ...payload\n          };\n          const newUser = state.user ? {\n            ...state.user,\n            ...updatedUser\n          } : updatedUser;\n          localStorage.setItem('user', JSON.stringify(newUser));\n          console.log('Reducer Payload : ', newUser);\n          return {\n            ...state,\n            user: newUser\n          };\n        } catch (error) {\n          console.error('Error updating user: ', error);\n          return state;\n        }\n      }\n    default:\n      return state;\n  }\n};\nexport { initialState, reducer };","map":{"version":3,"names":["jwtDecode","AUTHENTICATE","GOOGLE_LOGIN","LOG_IN","LOG_OUT","UPDATE_USER_PROFILE","toggleLocalStorage","initialState","isAuthenticated","user","reducer","state","action","type","payload","token","refreshToken","console","error","updatedUser","newUser","localStorage","setItem","JSON","stringify","log"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/context/auth/reducer.js"],"sourcesContent":["import { jwtDecode } from 'jwt-decode';\nimport {\n  AUTHENTICATE,\n  GOOGLE_LOGIN,\n  LOG_IN,\n  LOG_OUT,\n  UPDATE_USER_PROFILE,\n} from './constants';\nimport { toggleLocalStorage } from '../../utils/jwt';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOG_IN: \n    case GOOGLE_LOGIN: {\n      if (payload?.token) {\n        const { token, refreshToken} = payload;\n        const user = jwtDecode(token);\n        toggleLocalStorage(token, refreshToken);\n        return { isAuthenticated: true, user };\n      } else {\n        console.error('Payload missing token');\n        return state;\n      }\n    }\n    case LOG_OUT: {\n      toggleLocalStorage();\n      return { isAuthenticated: false, user: null };\n    }\n    case AUTHENTICATE: {\n      try {\n        const user = jwtDecode(payload);\n        return { isAuthenticated: true, user };\n      } catch (error) {\n        console.error('Error decoding token: ', error);\n        return state;\n      }\n    }\n    case UPDATE_USER_PROFILE: {\n      try {\n        const updatedUser = { ...state.user, ...payload };\n        const newUser = state.user\n          ? { ...state.user, ...updatedUser }\n          : updatedUser;\n        localStorage.setItem('user', JSON.stringify(newUser));\n        console.log('Reducer Payload : ', newUser);\n        return { ...state, user: newUser };\n      } catch (error) {\n        console.error('Error updating user: ', error);\n        return state;\n      }\n    }\n    default:\n      return state;\n  }\n};\nexport { initialState, reducer };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SACEC,YAAY,EACZC,YAAY,EACZC,MAAM,EACNC,OAAO,EACPC,mBAAmB,QACd,aAAa;AACpB,SAASC,kBAAkB,QAAQ,iBAAiB;AAEpD,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAChD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKV,MAAM;IACX,KAAKD,YAAY;MAAE;QACjB,IAAIY,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEC,KAAK,EAAE;UAClB,MAAM;YAAEA,KAAK;YAAEC;UAAY,CAAC,GAAGF,OAAO;UACtC,MAAML,IAAI,GAAGT,SAAS,CAACe,KAAK,CAAC;UAC7BT,kBAAkB,CAACS,KAAK,EAAEC,YAAY,CAAC;UACvC,OAAO;YAAER,eAAe,EAAE,IAAI;YAAEC;UAAK,CAAC;QACxC,CAAC,MAAM;UACLQ,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;UACtC,OAAOP,KAAK;QACd;MACF;IACA,KAAKP,OAAO;MAAE;QACZE,kBAAkB,CAAC,CAAC;QACpB,OAAO;UAAEE,eAAe,EAAE,KAAK;UAAEC,IAAI,EAAE;QAAK,CAAC;MAC/C;IACA,KAAKR,YAAY;MAAE;QACjB,IAAI;UACF,MAAMQ,IAAI,GAAGT,SAAS,CAACc,OAAO,CAAC;UAC/B,OAAO;YAAEN,eAAe,EAAE,IAAI;YAAEC;UAAK,CAAC;QACxC,CAAC,CAAC,OAAOS,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9C,OAAOP,KAAK;QACd;MACF;IACA,KAAKN,mBAAmB;MAAE;QACxB,IAAI;UACF,MAAMc,WAAW,GAAG;YAAE,GAAGR,KAAK,CAACF,IAAI;YAAE,GAAGK;UAAQ,CAAC;UACjD,MAAMM,OAAO,GAAGT,KAAK,CAACF,IAAI,GACtB;YAAE,GAAGE,KAAK,CAACF,IAAI;YAAE,GAAGU;UAAY,CAAC,GACjCA,WAAW;UACfE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;UACrDH,OAAO,CAACQ,GAAG,CAAC,oBAAoB,EAAEL,OAAO,CAAC;UAC1C,OAAO;YAAE,GAAGT,KAAK;YAAEF,IAAI,EAAEW;UAAQ,CAAC;QACpC,CAAC,CAAC,OAAOF,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C,OAAOP,KAAK;QACd;MACF;IACA;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AACD,SAASJ,YAAY,EAAEG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}