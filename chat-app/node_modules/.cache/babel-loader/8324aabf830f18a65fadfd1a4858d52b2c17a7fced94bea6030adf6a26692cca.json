{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { resendVerificationEmail, updateUserProfile } from '../../api/auth';\nimport { logOutAction, updateUserDataAction } from '../../context/auth/actions';\nimport { passwordRegex } from '../../utils/Regex';\nimport { deleteAccount } from '../../api/auth';\nimport { useNavigate } from 'react-router-dom';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [message, setMessage] = useState('');\n  const [successUploadMessage, setSuccessUploadMessage] = useState('');\n  const [formData, setFormData] = useState({\n    name: user.name || '',\n    lastName: user.lastName || '',\n    age: user.age || '',\n    email: user.email || ''\n  });\n  const [passwordData, setPasswordData] = useState({\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [avatar, setAvatar] = useState(null);\n  const [showAttachmentBox, setShowAttachmentBox] = useState(false);\n  const navigate = useNavigate();\n  const handleAttachmentBoxToggle = () => {\n    setShowAttachmentBox(!showAttachmentBox);\n  };\n  useEscapeKeyHandler(() => {\n    setShowAttachmentBox(false);\n  });\n  const handleChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  }, []);\n  const handlePasswordChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPasswordData(prevPasswordData => ({\n      ...prevPasswordData,\n      [name]: value\n    }));\n  };\n  const handleAvatarChange = e => {\n    e.stopPropagation();\n    const file = setAvatar(e.target.files[0]); // Set the selected avatar file\n    if (file) {\n      setAvatar(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Check if newPassword and confirmPassword are both empty\n      if (!passwordData.newPassword && !passwordData.confirmPassword) {\n        // Update profile information without password change\n        const updatedData = {\n          ...formData\n        };\n        await updateUserProfile(user.userId, updatedData);\n        dispatch(updateUserDataAction(updatedData));\n        setMessage('Successfully updated profile information');\n      } else {\n        // Perform password validation if newPassword or confirmPassword is not empty\n        if (!passwordRegex.test(passwordData.newPassword)) {\n          throw new Error('Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number, and one special character');\n        }\n        if (passwordData.newPassword !== passwordData.confirmPassword) {\n          throw new Error(\"Passwords don't match\");\n        }\n\n        // Update profile information with password change\n        const updatedData = {\n          ...formData,\n          password: passwordData.newPassword\n        };\n        await updateUserProfile(user.userId, updatedData);\n        dispatch(updateUserDataAction(updatedData));\n        setMessage('Password updated successfully');\n        setPasswordData({\n          newPassword: '',\n          confirmPassword: ''\n        });\n        console.log('Updated Data :', updatedData);\n      }\n    } catch (error) {\n      console.error('Failed to update user profile:', error);\n      setMessage(error.message);\n      return;\n    }\n  };\n  useEffect(() => {\n    const userFromStorage = JSON.parse(localStorage.getItem('user'));\n    if (userFromStorage) {\n      setFormData({\n        name: userFromStorage.name || '',\n        lastName: userFromStorage.lastName || '',\n        age: userFromStorage.age || '',\n        email: userFromStorage.email || ''\n      });\n    }\n  }, [user]);\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm('Are you sure you want to delete this account?');\n    if (!confirmed) return;\n    try {\n      await deleteAccount(user.userId);\n      setTimeout(() => {\n        dispatch(logOutAction());\n        navigate('/');\n      }, 2000);\n      setMessage('Account deleted successfully');\n    } catch (error) {\n      console.error('Failed to delete account', error);\n      setMessage(error.message);\n    }\n  };\n  const handleResendVerification = async token => {\n    try {\n      await resendVerificationEmail(token);\n      setMessage('Email verification sent');\n    } catch (error) {\n      console.error('Failed to send verification email', error);\n      setMessage(error.message);\n    }\n  };\n\n  // const handleUploadAvatar = async (e) => {\n  //   try {\n  //     const formData = new FormData();\n  //     formData.append('avatar', avatar);\n  //     console.log(\"FORM DATA\",)\n\n  //     const response = await fetch('http://localhost:5500/api/users/uploads', {\n  //       method: 'POST',\n  //       headers: {\n  //         Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n  //       },\n  //       body: formData,\n  //     });\n\n  //     if (!response.ok) {\n  //       const errorData = await response.json();\n  //       console.error('Error uploading avatar :', errorData);\n  //       throw new Error('Failed to upload avatar');\n  //     }\n\n  //     localStorage.setItem(\"userAvatarImage\", user.userAvatar)\n  //     // Avatar uploaded successfully\n  //     setTimeout(() => {\n  //       setShowAttachmentBox(!showAttachmentBox);\n  //     }, 1000);\n  //     setSuccessUploadMessage('Photo uploaded successfully');\n  //   } catch (error) {\n  //     console.error('Error uploading avatar:', error.message);\n  //   }\n  // };\n\n  // console.log('User avatar:', user.userAvatar);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-info-modal-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-photo-header\",\n        onClick: handleAttachmentBoxToggle,\n        title: \"Click to change profile picture\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), Object.entries(formData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs-update-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: key.includes('Password') ? 'password' : 'text',\n          id: key,\n          name: key,\n          value: value,\n          onChange: handleChange,\n          disabled: key === 'username',\n          autoComplete: key === 'password' ? 'on' : 'off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), key === 'email' && !user.emailVerified && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-xmark\",\n          onClick: handleResendVerification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), key === 'email' && user.emailVerified && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            name: \"newPassword\",\n            value: passwordData.newPassword,\n            onChange: handlePasswordChange,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: passwordData.confirmPassword,\n            onChange: handlePasswordChange,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-account-button\",\n      onClick: handleDeleteAccount,\n      children: \"Delete Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }, this), showAttachmentBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attachment-user-photo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change Profile Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"avatar\",\n          name: \"avatar\",\n          accept: \"image/*\",\n          onChange: handleAvatarChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadAvatar,\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), successUploadMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: successUploadMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInfo, \"zHrSuu+J0h/eKtdzG8hfUKLFoJQ=\", false, function () {\n  return [useAuthContext, useNavigate, useEscapeKeyHandler];\n});\n_c = UserInfo;\nexport default UserInfo;\nvar _c;\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuthContext","resendVerificationEmail","updateUserProfile","logOutAction","updateUserDataAction","passwordRegex","deleteAccount","useNavigate","useEscapeKeyHandler","jsxDEV","_jsxDEV","UserInfo","_s","state","dispatch","user","message","setMessage","successUploadMessage","setSuccessUploadMessage","formData","setFormData","name","lastName","age","email","passwordData","setPasswordData","newPassword","confirmPassword","avatar","setAvatar","showAttachmentBox","setShowAttachmentBox","navigate","handleAttachmentBoxToggle","handleChange","e","value","target","prevFormData","handlePasswordChange","prevPasswordData","handleAvatarChange","stopPropagation","file","files","handleSubmit","preventDefault","updatedData","userId","test","Error","password","console","log","error","userFromStorage","JSON","parse","localStorage","getItem","handleDeleteAccount","confirmed","window","confirm","setTimeout","handleResendVerification","token","className","children","onSubmit","onClick","title","username","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","htmlFor","charAt","toUpperCase","slice","type","includes","id","onChange","disabled","autoComplete","emailVerified","accept","handleUploadAvatar","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { resendVerificationEmail, updateUserProfile } from '../../api/auth';\nimport { logOutAction, updateUserDataAction } from '../../context/auth/actions';\nimport { passwordRegex } from '../../utils/Regex';\nimport { deleteAccount } from '../../api/auth';\nimport { useNavigate } from 'react-router-dom';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\n\nconst UserInfo = () => {\n  const { state, dispatch } = useAuthContext();\n  const { user } = state;\n  const [message, setMessage] = useState('');\n  const [successUploadMessage, setSuccessUploadMessage] = useState('')\n  const [formData, setFormData] = useState({\n    name: user.name || '',\n    lastName: user.lastName || '',\n    age: user.age || '',\n    email: user.email || '',\n  });\n  const [passwordData, setPasswordData] = useState({\n    newPassword: '',\n    confirmPassword: '',\n  });\n  const [avatar, setAvatar] = useState(null);\n  const [showAttachmentBox, setShowAttachmentBox] = useState(false);\n  const navigate = useNavigate();\n\n  const handleAttachmentBoxToggle = () => {\n    setShowAttachmentBox(!showAttachmentBox);\n  };\n\n  useEscapeKeyHandler(() => {\n    setShowAttachmentBox(false);\n  });\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  }, []);\n\n  const handlePasswordChange = (e) => {\n    const { name, value } = e.target;\n    setPasswordData((prevPasswordData) => ({\n      ...prevPasswordData,\n      [name]: value,\n    }));\n  };\n\n  const handleAvatarChange = (e) => {\n    e.stopPropagation();\n    const file = setAvatar(e.target.files[0]); // Set the selected avatar file\n    if (file) {\n      setAvatar(file);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Check if newPassword and confirmPassword are both empty\n      if (!passwordData.newPassword && !passwordData.confirmPassword) {\n        // Update profile information without password change\n        const updatedData = { ...formData };\n        await updateUserProfile(user.userId, updatedData);\n        dispatch(updateUserDataAction(updatedData));\n        setMessage('Successfully updated profile information');\n      } else {\n        // Perform password validation if newPassword or confirmPassword is not empty\n        if (!passwordRegex.test(passwordData.newPassword)) {\n          throw new Error(\n            'Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number, and one special character',\n          );\n        }\n        if (passwordData.newPassword !== passwordData.confirmPassword) {\n          throw new Error(\"Passwords don't match\");\n        }\n\n        // Update profile information with password change\n        const updatedData = {\n          ...formData,\n          password: passwordData.newPassword,\n        };\n        await updateUserProfile(user.userId, updatedData);\n        dispatch(updateUserDataAction(updatedData));\n        setMessage('Password updated successfully');\n        setPasswordData({ newPassword: '', confirmPassword: '' });\n        console.log('Updated Data :', updatedData);\n      }\n    } catch (error) {\n      console.error('Failed to update user profile:', error);\n      setMessage(error.message);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    const userFromStorage = JSON.parse(localStorage.getItem('user'));\n    if (userFromStorage) {\n      setFormData({\n        name: userFromStorage.name || '',\n        lastName: userFromStorage.lastName || '',\n        age: userFromStorage.age || '',\n        email: userFromStorage.email || '',\n      });\n    }\n  }, [user]);\n\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm(\n      'Are you sure you want to delete this account?',\n    );\n    if (!confirmed) return;\n\n    try {\n      await deleteAccount(user.userId);\n      setTimeout(() => {\n        dispatch(logOutAction());\n        navigate('/');\n      }, 2000);\n      setMessage('Account deleted successfully');\n    } catch (error) {\n      console.error('Failed to delete account', error);\n      setMessage(error.message);\n    }\n  };\n\n  const handleResendVerification = async (token) => {\n    try {\n      await resendVerificationEmail(token);\n      setMessage('Email verification sent');\n    } catch (error) {\n      console.error('Failed to send verification email', error);\n      setMessage(error.message);\n    }\n  };\n\n  // const handleUploadAvatar = async (e) => {\n  //   try {\n  //     const formData = new FormData();\n  //     formData.append('avatar', avatar);\n  //     console.log(\"FORM DATA\",)\n\n  //     const response = await fetch('http://localhost:5500/api/users/uploads', {\n  //       method: 'POST',\n  //       headers: {\n  //         Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n  //       },\n  //       body: formData,\n  //     });\n\n  //     if (!response.ok) {\n  //       const errorData = await response.json();\n  //       console.error('Error uploading avatar :', errorData);\n  //       throw new Error('Failed to upload avatar');\n  //     }\n\n  //     localStorage.setItem(\"userAvatarImage\", user.userAvatar)\n  //     // Avatar uploaded successfully\n  //     setTimeout(() => {\n  //       setShowAttachmentBox(!showAttachmentBox);\n  //     }, 1000);\n  //     setSuccessUploadMessage('Photo uploaded successfully');\n  //   } catch (error) {\n  //     console.error('Error uploading avatar:', error.message);\n  //   }\n  // };\n\n  // console.log('User avatar:', user.userAvatar);\n\n  return (\n    <div className=\"user-info-modal-wrapper\">\n      <form onSubmit={handleSubmit}>\n        <div\n          className=\"user-photo-header\"\n          onClick={handleAttachmentBoxToggle}\n          title=\"Click to change profile picture\"\n        >\n          {/* <img\n            src={avatar ? URL.createObjectURL(avatar) : localStorage.getItem(\"userAvatarImage\") || user.userAvatar}\n            alt=\"Profile\"\n          /> */}\n          <h1>{user.username}</h1>\n        </div>\n        {Object.entries(formData).map(([key, value]) => (\n          <div className=\"form-inputs-update-profile\" key={key}>\n            <label htmlFor={key}>\n              {key.charAt(0).toUpperCase() + key.slice(1)}:\n            </label>\n            <input\n              type={key.includes('Password') ? 'password' : 'text'}\n              id={key}\n              name={key}\n              value={value}\n              onChange={handleChange}\n              disabled={key === 'username'}\n              autoComplete={key === 'password' ? 'on' : 'off'}\n            />\n            {key === 'email' && !user.emailVerified && (\n              <i\n                className=\"fa-solid fa-circle-xmark\"\n                onClick={handleResendVerification}\n              ></i>\n            )}\n            {key === 'email' && user.emailVerified && (\n              <i className=\"fa-solid fa-circle-check\"></i>\n            )}\n          </div>\n        ))}\n        <div className=\"password-section\">\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"newPassword\">New Password:</label>\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              name=\"newPassword\"\n              value={passwordData.newPassword}\n              onChange={handlePasswordChange}\n              autoComplete=\"true\"\n            />\n          </div>\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={passwordData.confirmPassword}\n              onChange={handlePasswordChange}\n              autoComplete=\"true\"\n            />\n          </div>\n        </div>\n        <button type=\"submit\">Save Changes</button>\n      </form>\n      <button className=\"delete-account-button\" onClick={handleDeleteAccount}>\n        Delete Account\n      </button>\n      {message && <p>{message}</p>}\n      {showAttachmentBox && (\n        <div className=\"page-overlay\">\n          <div className=\"attachment-user-photo-box\">\n            <h3>Change Profile Photo</h3>\n            <input\n              type=\"file\"\n              id=\"avatar\"\n              name=\"avatar\"\n              accept=\"image/*\"\n              onChange={handleAvatarChange}\n            />\n            <button onClick={handleUploadAvatar}>Upload Photo</button>\n            {successUploadMessage && <p>{successUploadMessage}</p>}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}