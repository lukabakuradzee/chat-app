{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nimport { AUTHENTICATE, LOG_IN, LOG_OUT, UPDATE_USER_PROFILE } from './constants';\nimport { toggleLocalStorage } from '../../utils/jwt';\nconst initialState = {\n  isAuthenticated: false,\n  user: null\n};\nconst reducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case LOG_IN:\n      {\n        try {\n          const {\n            token,\n            refreshToken\n          } = payload;\n          const user = jwtDecode(token);\n          toggleLocalStorage(token, refreshToken);\n          return {\n            isAuthenticated: true,\n            user\n          };\n        } catch (error) {\n          console.error('Error decoding token: ', error);\n          return state;\n        }\n      }\n    case LOG_OUT:\n      {\n        toggleLocalStorage();\n        return {\n          isAuthenticated: false,\n          user: null\n        };\n      }\n    case AUTHENTICATE:\n      {\n        try {\n          const user = jwtDecode(payload);\n          return {\n            isAuthenticated: true,\n            user\n          };\n        } catch (error) {\n          console.error('Error decoding token: ', error);\n          return state;\n        }\n      }\n    case UPDATE_USER_PROFILE:\n      {\n        // Assuming payload contains updated user info (bio and gender)\n        try {\n          const updatedUser = {\n            ...state.user,\n            ...payload\n          };\n          const newUser = {\n            ...state.user,\n            ...updatedUser\n          };\n          console.log('Reducer Payload : ', newUser);\n          return {\n            ...state,\n            user: updatedUser\n          };\n        } catch (error) {\n          console.error('Error updating user: ', error);\n          return state;\n        }\n      }\n    default:\n      return state;\n  }\n};\nexport { initialState, reducer };","map":{"version":3,"names":["jwtDecode","AUTHENTICATE","LOG_IN","LOG_OUT","UPDATE_USER_PROFILE","toggleLocalStorage","initialState","isAuthenticated","user","reducer","state","action","type","payload","token","refreshToken","error","console","updatedUser","newUser","log"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/context/auth/reducer.js"],"sourcesContent":["import { jwtDecode } from 'jwt-decode';\nimport {\n  AUTHENTICATE,\n  LOG_IN,\n  LOG_OUT,\n  UPDATE_USER_PROFILE,\n} from './constants';\nimport { toggleLocalStorage } from '../../utils/jwt';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOG_IN: {\n      try {\n        const { token, refreshToken } = payload;\n        const user = jwtDecode(token);\n        toggleLocalStorage(token, refreshToken);\n        return { isAuthenticated: true, user };\n      } catch (error) {\n        console.error('Error decoding token: ', error);\n        return state;\n      }\n    }\n    case LOG_OUT: {\n      toggleLocalStorage();\n      return { isAuthenticated: false, user: null };\n    }\n    case AUTHENTICATE: {\n      try {\n        const user = jwtDecode(payload);\n        return { isAuthenticated: true, user };\n      } catch (error) {\n        console.error('Error decoding token: ', error);\n        return state;\n      }\n    }\n    case UPDATE_USER_PROFILE: {\n      // Assuming payload contains updated user info (bio and gender)\n       try {\n         const updatedUser = { ...state.user, ...payload };\n         const newUser = {...state.user, ...updatedUser}\n         console.log('Reducer Payload : ', newUser);\n         return {...state, user: updatedUser };\n       } catch (error) {\n         console.error('Error updating user: ', error);\n         return state;\n       }\n    }\n    default:\n      return state;\n    }\n  };\nexport { initialState, reducer };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SACEC,YAAY,EACZC,MAAM,EACNC,OAAO,EACPC,mBAAmB,QACd,aAAa;AACpB,SAASC,kBAAkB,QAAQ,iBAAiB;AAEpD,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAChD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKV,MAAM;MAAE;QACX,IAAI;UACF,MAAM;YAAEY,KAAK;YAAEC;UAAa,CAAC,GAAGF,OAAO;UACvC,MAAML,IAAI,GAAGR,SAAS,CAACc,KAAK,CAAC;UAC7BT,kBAAkB,CAACS,KAAK,EAAEC,YAAY,CAAC;UACvC,OAAO;YAAER,eAAe,EAAE,IAAI;YAAEC;UAAK,CAAC;QACxC,CAAC,CAAC,OAAOQ,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9C,OAAON,KAAK;QACd;MACF;IACA,KAAKP,OAAO;MAAE;QACZE,kBAAkB,CAAC,CAAC;QACpB,OAAO;UAAEE,eAAe,EAAE,KAAK;UAAEC,IAAI,EAAE;QAAK,CAAC;MAC/C;IACA,KAAKP,YAAY;MAAE;QACjB,IAAI;UACF,MAAMO,IAAI,GAAGR,SAAS,CAACa,OAAO,CAAC;UAC/B,OAAO;YAAEN,eAAe,EAAE,IAAI;YAAEC;UAAK,CAAC;QACxC,CAAC,CAAC,OAAOQ,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9C,OAAON,KAAK;QACd;MACF;IACA,KAAKN,mBAAmB;MAAE;QACxB;QACC,IAAI;UACF,MAAMc,WAAW,GAAG;YAAE,GAAGR,KAAK,CAACF,IAAI;YAAE,GAAGK;UAAQ,CAAC;UACjD,MAAMM,OAAO,GAAG;YAAC,GAAGT,KAAK,CAACF,IAAI;YAAE,GAAGU;UAAW,CAAC;UAC/CD,OAAO,CAACG,GAAG,CAAC,oBAAoB,EAAED,OAAO,CAAC;UAC1C,OAAO;YAAC,GAAGT,KAAK;YAAEF,IAAI,EAAEU;UAAY,CAAC;QACvC,CAAC,CAAC,OAAOF,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C,OAAON,KAAK;QACd;MACH;IACA;MACE,OAAOA,KAAK;EACd;AACF,CAAC;AACH,SAASJ,YAAY,EAAEG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}