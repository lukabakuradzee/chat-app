{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/ForgetPassword/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { passwordRegex } from '../../utils/Regex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const [showForm, setShowForm] = useState(true);\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setErrorMessage(\"Passwords Don't Match!\");\n      return;\n    } else {\n      setErrorMessage('');\n    }\n    if (!passwordRegex.test(newPassword)) {\n      setErrorMessage(\"Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.\");\n      return;\n    }\n    try {\n      // Extract reset token from URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const resetToken = urlParams.get('token');\n      const response = await fetch(`http://localhost:5500/api/users/set-new-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          newPassword,\n          resetToken\n        })\n      });\n      const data = await response.json();\n      set;\n      setMessage(data.message);\n      setShowForm(false);\n    } catch (error) {\n      setMessage('Failed to change password');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      className: \"password-reset-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newPassword\",\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-reset-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-lock password-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-reset-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-lock password-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 24\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"VTGVJm6ivgEIeZ+NWV86bkIkeMg=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","passwordRegex","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","loading","setLoading","message","setMessage","showForm","setShowForm","handleResetPassword","e","preventDefault","test","urlParams","URLSearchParams","window","location","search","resetToken","get","response","fetch","method","headers","body","JSON","stringify","data","json","set","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/ForgetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { passwordRegex } from '../../utils/Regex';\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(true)\n  const [message, setMessage] = useState('');\n  const [showForm, setShowForm] = useState(true)\n\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n      if (newPassword !== confirmPassword) {\n        setErrorMessage(\"Passwords Don't Match!\");\n        return;\n      } else {\n         setErrorMessage('')\n      }\n\n      if(!passwordRegex.test(newPassword)) {\n        setErrorMessage(\"Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.\");\n        return;\n      }\n\n    try {\n      // Extract reset token from URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const resetToken = urlParams.get('token');\n     \n      const response = await fetch(\n        `http://localhost:5500/api/users/set-new-password`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ newPassword, resetToken }),\n        },\n      );\n\n      const data = await response.json();\n      set\n      setMessage(data.message)\n      setShowForm(false)\n    } catch (error) {\n      setMessage('Failed to change password');\n      console.error(error);\n    }\n  };\n\n  \n\n  return (\n    <div className=\"password-reset-container\">\n      <h2>Password Reset</h2>\n      {showForm && (\n      <form onSubmit={handleResetPassword} className=\"password-reset-form\">\n        <label htmlFor=\"newPassword\">New Password:</label>\n        <div className=\"password-reset-input\">\n        <i className=\"fa-solid fa-lock password-icon\"></i>\n        <input\n          type=\"password\"\n          id=\"newPassword\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n        />\n       \n\n        </div>\n        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n        <div className=\"password-reset-input\">\n        <i className=\"fa-solid fa-lock password-icon\"></i>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n        \n        </div>\n        <button type='submit' onClick={handleResetPassword}>Reset Password</button>\n      </form>\n      )}\n      {errorMessage && <p>{errorMessage}</p> }\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}