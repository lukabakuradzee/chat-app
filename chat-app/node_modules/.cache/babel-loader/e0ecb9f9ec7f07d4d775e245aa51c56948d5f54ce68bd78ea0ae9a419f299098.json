{"ast":null,"code":"import { updateUserProfile, deleteAccount, resendVerificationEmail } from '../../api/auth';\nimport { passwordRegex } from '../../utils/Regex';\nexport const updateProfile = async (userId, formikProfile) => {\n  if (!passwordData.newPassword && !passwordData.confirmPassword) {\n    // Update profile information without password change\n    const updatedData = {\n      ...formikProfile\n    };\n    await updateUserProfile(userId, updatedData);\n    return {\n      message: 'Successfully updated profile information',\n      updatedData\n    };\n  }\n\n  // Update profile information with password change\n  const updatedData = {\n    ...formikProfile\n  };\n  await updateUserProfile(userId, updatedData);\n  return {\n    message: 'Password updated successfully',\n    updatedData\n  };\n};\nexport const uploadAvatar = async avatar => {\n  const formData = new FormData();\n  formData.append('avatar', avatar);\n  const response = await fetch('http://localhost:5500/api/users/uploads', {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n    },\n    body: formData\n  });\n  const data = await response.json();\n  if (response.ok) {\n    return {\n      message: 'Photo uploaded',\n      data\n    };\n  }\n  throw new Error('Failed to upload avatar');\n};\nexport const deleteAvatar = async userId => {\n  const url = `http://localhost:5500/api/users/delete-avatar/${userId}`;\n  const response = await fetch(url, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n    }\n  });\n  const data = await response.json();\n  if (response.ok) {\n    return {\n      message: 'Profile photo deleted',\n      data\n    };\n  }\n  throw new Error('Error deleting profile picture');\n};\nexport const deleteAccountService = async userId => {\n  await deleteAccount(userId);\n};\nexport const resendVerification = async token => {\n  await resendVerificationEmail(token);\n};","map":{"version":3,"names":["updateUserProfile","deleteAccount","resendVerificationEmail","passwordRegex","updateProfile","userId","formikProfile","passwordData","newPassword","confirmPassword","updatedData","message","uploadAvatar","avatar","formData","FormData","append","response","fetch","method","headers","Authorization","localStorage","getItem","body","data","json","ok","Error","deleteAvatar","url","deleteAccountService","resendVerification","token"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/api/services/userServices.js"],"sourcesContent":["import {\n  updateUserProfile,\n  deleteAccount,\n  resendVerificationEmail,\n} from '../../api/auth';\nimport { passwordRegex } from '../../utils/Regex';\n\nexport const updateProfile = async (userId, formikProfile) => {\n  if (!passwordData.newPassword && !passwordData.confirmPassword) {\n    // Update profile information without password change\n    const updatedData = { ...formikProfile };\n    await updateUserProfile(userId, updatedData);\n    return { message: 'Successfully updated profile information', updatedData };\n  } \n\n    // Update profile information with password change\n    const updatedData = {\n      ...formikProfile,\n    };\n    await updateUserProfile(userId, updatedData);\n    return { message: 'Password updated successfully', updatedData };\n};\n\nexport const uploadAvatar = async (avatar) => {\n  const formData = new FormData();\n  formData.append('avatar', avatar);\n\n  const response = await fetch('http://localhost:5500/api/users/uploads', {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n    },\n    body: formData,\n  });\n\n  const data = await response.json();\n  if (response.ok) {\n    return { message: 'Photo uploaded', data };\n  }\n\n  throw new Error('Failed to upload avatar');\n};\n\nexport const deleteAvatar = async (userId) => {\n  const url = `http://localhost:5500/api/users/delete-avatar/${userId}`;\n  const response = await fetch(url, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n    },\n  });\n  const data = await response.json();\n  if (response.ok) {\n    return { message: 'Profile photo deleted', data };\n  }\n  throw new Error('Error deleting profile picture');\n};\n\nexport const deleteAccountService = async (userId) => {\n  await deleteAccount(userId);\n};\n\nexport const resendVerification = async (token) => {\n  await resendVerificationEmail(token);\n};\n"],"mappings":"AAAA,SACEA,iBAAiB,EACjBC,aAAa,EACbC,uBAAuB,QAClB,gBAAgB;AACvB,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,aAAa,KAAK;EAC5D,IAAI,CAACC,YAAY,CAACC,WAAW,IAAI,CAACD,YAAY,CAACE,eAAe,EAAE;IAC9D;IACA,MAAMC,WAAW,GAAG;MAAE,GAAGJ;IAAc,CAAC;IACxC,MAAMN,iBAAiB,CAACK,MAAM,EAAEK,WAAW,CAAC;IAC5C,OAAO;MAAEC,OAAO,EAAE,0CAA0C;MAAED;IAAY,CAAC;EAC7E;;EAEE;EACA,MAAMA,WAAW,GAAG;IAClB,GAAGJ;EACL,CAAC;EACD,MAAMN,iBAAiB,CAACK,MAAM,EAAEK,WAAW,CAAC;EAC5C,OAAO;IAAEC,OAAO,EAAE,+BAA+B;IAAED;EAAY,CAAC;AACpE,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC5C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,MAAM,CAAC;EAEjC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;IACtEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;IAC/D,CAAC;IACDC,IAAI,EAAEV;EACR,CAAC,CAAC;EAEF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;IACf,OAAO;MAAEhB,OAAO,EAAE,gBAAgB;MAAEc;IAAK,CAAC;EAC5C;EAEA,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOxB,MAAM,IAAK;EAC5C,MAAMyB,GAAG,GAAI,iDAAgDzB,MAAO,EAAC;EACrE,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACY,GAAG,EAAE;IAChCX,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;IAC/D;EACF,CAAC,CAAC;EACF,MAAME,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;IACf,OAAO;MAAEhB,OAAO,EAAE,uBAAuB;MAAEc;IAAK,CAAC;EACnD;EACA,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;AACnD,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAG,MAAO1B,MAAM,IAAK;EACpD,MAAMJ,aAAa,CAACI,MAAM,CAAC;AAC7B,CAAC;AAED,OAAO,MAAM2B,kBAAkB,GAAG,MAAOC,KAAK,IAAK;EACjD,MAAM/B,uBAAuB,CAAC+B,KAAK,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}