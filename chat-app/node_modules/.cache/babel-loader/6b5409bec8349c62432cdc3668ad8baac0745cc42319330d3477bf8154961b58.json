{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/SendVerificationSms/SmsForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport {\n// sendVerificationSms,\nverifySmsCode } from '../../api/services/userServices';\nimport { BarLoader } from 'react-spinners';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { logInAction } from '../../context/auth/actions';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SmsForm({\n  phoneNumber\n}) {\n  _s();\n  const {\n    dispatch\n  } = useAuthContext();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  // const [codeSent, setCodeSent] = useState(false);\n  // const [phoneNumber, setPhoneNumber] = useState('');\n\n  // const formikSendSms = useFormik({\n  //   initialValues: {\n  //     to: '',\n  //   },\n  //   validationSchema: Yup.object({\n  //     to: Yup.string().required('Phone number is required'),\n  //   }),\n  //   onSubmit: async (values) => {\n  //     setLoading(true);\n  //     setPhoneNumber(values.to);\n  //     await handleAsyncOperation(\n  //       async () => {\n  //        const data = await sendVerificationSms(\n  //           formikSendSms.values.to,\n  //           values.code,\n  //         );\n  //         setMessage(`SMS code was sent to: ${values.to}`);\n  //         console.log(\"Phone Number: \", values.to)\n  //         setCodeSent(true);\n  //       },\n  //       setLoading,\n  //       (error) => setMessage(error.message),\n  //     );\n  //   },\n  // });\n\n  const formikVerifyCode = useFormik({\n    initialValues: {\n      code: ''\n    },\n    validationSchema: Yup.object({\n      code: Yup.string().required('Verification Code is required')\n    }),\n    onSubmit: async values => {\n      setLoading(true);\n      await handleAsyncOperation(async () => {\n        const response = await verifySmsCode(phoneNumber, values.code);\n        const data = await sign;\n        console.log('Response: ', response);\n        dispatch(logInAction());\n        setMessage('sms code verified successfully');\n      }, setLoading, error => setMessage(error.message));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formikVerifyCode.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Verification Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"code\",\n          name: \"code\",\n          type: \"text\",\n          value: formikVerifyCode.values.code,\n          onChange: formikVerifyCode.handleChange,\n          onBlur: formikVerifyCode.handleBlur,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), formikVerifyCode.touched.code && formikVerifyCode.errors.code ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formikVerifyCode.errors.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-loader\",\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(BarLoader, {\n        color: \"#fe3c72\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(SmsForm, \"pcd0g1RwVyKLD/p8hQ7KNz0P/ps=\", false, function () {\n  return [useAuthContext, useFormik];\n});\n_c = SmsForm;\nexport default SmsForm;\nvar _c;\n$RefreshReg$(_c, \"SmsForm\");","map":{"version":3,"names":["React","useState","handleAsyncOperation","verifySmsCode","BarLoader","useFormik","Yup","logInAction","useAuthContext","jsxDEV","_jsxDEV","SmsForm","phoneNumber","_s","dispatch","loading","setLoading","error","setError","message","setMessage","formikVerifyCode","initialValues","code","validationSchema","object","string","required","onSubmit","values","response","data","sign","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","id","name","type","value","onChange","handleChange","onBlur","handleBlur","touched","errors","className","style","color","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/SendVerificationSms/SmsForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport {\n  // sendVerificationSms,\n  verifySmsCode,\n} from '../../api/services/userServices';\nimport { BarLoader } from 'react-spinners';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { logInAction } from '../../context/auth/actions';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\n\nfunction SmsForm({ phoneNumber }) {\n  const { dispatch } = useAuthContext();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  // const [codeSent, setCodeSent] = useState(false);\n  // const [phoneNumber, setPhoneNumber] = useState('');\n\n  // const formikSendSms = useFormik({\n  //   initialValues: {\n  //     to: '',\n  //   },\n  //   validationSchema: Yup.object({\n  //     to: Yup.string().required('Phone number is required'),\n  //   }),\n  //   onSubmit: async (values) => {\n  //     setLoading(true);\n  //     setPhoneNumber(values.to);\n  //     await handleAsyncOperation(\n  //       async () => {\n  //        const data = await sendVerificationSms(\n  //           formikSendSms.values.to,\n  //           values.code,\n  //         );\n  //         setMessage(`SMS code was sent to: ${values.to}`);\n  //         console.log(\"Phone Number: \", values.to)\n  //         setCodeSent(true);\n  //       },\n  //       setLoading,\n  //       (error) => setMessage(error.message),\n  //     );\n  //   },\n  // });\n\n  const formikVerifyCode = useFormik({\n    initialValues: {\n      code: '',\n    },\n    validationSchema: Yup.object({\n      code: Yup.string().required('Verification Code is required'),\n    }),\n    onSubmit: async (values) => {\n      setLoading(true);\n      await handleAsyncOperation(\n        async () => {\n          const response = await verifySmsCode(phoneNumber, values.code);\n          const data = await sign\n          console.log('Response: ', response);\n          dispatch(logInAction());\n          setMessage('sms code verified successfully');\n        },\n        setLoading,\n        (error) => setMessage(error.message),\n      );\n    },\n  });\n\n  return (\n    <div>\n      <h1>Verify OTP</h1>\n      {/* {!codeSent ? (\n        <form onSubmit={formikSendSms.handleSubmit}>\n          <div style={{ marginBottom: '1em' }}>\n            <label>Phone Number:</label>\n            <input\n              style={{ marginBottom: '0.5em' }}\n              id=\"to\"\n              name=\"to\"\n              type=\"text\"\n              value={formikSendSms.values.to}\n              onChange={formikSendSms.handleChange}\n              onBlur={formikSendSms.handleBlur}\n              required\n            />\n            {formikSendSms.touched.to && formikSendSms.errors.to ? (\n              <div>{formikSendSms.errors.to}</div>\n            ) : null}\n          </div>\n          <button type=\"submit\">Send SMS</button>\n        </form>\n      ) : ( */}\n      <form onSubmit={formikVerifyCode.handleSubmit}>\n        <div>\n          <label>Verification Code:</label>\n          <input\n            id=\"code\"\n            name=\"code\"\n            type=\"text\"\n            value={formikVerifyCode.values.code}\n            onChange={formikVerifyCode.handleChange}\n            onBlur={formikVerifyCode.handleBlur}\n            required\n          />\n          {formikVerifyCode.touched.code && formikVerifyCode.errors.code ? (\n            <div>{formikVerifyCode.errors.code}</div>\n          ) : null}\n        </div>\n        <button type=\"submit\">Verify Code</button>\n      </form>\n\n      {message && <div>{message}</div>}\n      {error && <div>Error: {error}</div>}\n      {loading && (\n        <div className=\"bar-loader\" style={{}}>\n          <BarLoader color=\"#fe3c72\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SmsForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}