{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { logOutAction, updateUserDataAction } from '../../context/auth/actions';\nimport { useNavigate } from 'react-router-dom';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport LogoutButton from '../../components/LogoutButton/LogoutButton';\nimport { updateProfile, uploadAvatar, deleteAvatar, deleteAccountService, resendVerification } from '../../api/services/userServices';\nimport { BarLoader } from 'react-spinners';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { personInfo } from '../../api/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [successUploadMessage, setSuccessUploadMessage] = useState('');\n  const [avatar, setAvatar] = useState(null);\n  const [showAttachmentBox, setShowAttachmentBox] = useState(false);\n  const navigate = useNavigate();\n  const formikProfile = useFormik({\n    initialValues: {\n      username: user.username || '',\n      name: user.name || '',\n      lastName: user.lastName || '',\n      age: user.age || '',\n      email: user.email || '',\n      emailVerified: user.emailVerified || ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required('Name is required'),\n      lastName: Yup.string().required('Last name is required'),\n      age: Yup.number().required('Age is required').positive().integer(),\n      email: Yup.string().email('Invalid email address').required('Email is required')\n    }),\n    onSubmit: async values => {\n      await handleAsyncOperation(async () => {\n        const result = await updateProfile(user.userId, values, {});\n        dispatch(updateUserDataAction(result.updatedData));\n        setMessage(result.message);\n      }, setLoading, error => setError(error.message));\n    }\n  });\n  const formikPassword = useFormik({\n    initialValues: {\n      newPassword: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string().min(8, 'Password must contain at least 8 characters').matches(/[A-Z]/, 'Password must contain at least one uppercase letter').matches(/[a-z]/, 'Password must contain at least one lowercase letter').matches(/[0-9]/, 'Password must contain at least one number').matches(/[@$!%*?&#]/, 'Password must contain at least one special character'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], \"Passwords don't match\")\n    }),\n    onSubmit: async values => {\n      await handleAsyncOperation(async () => {\n        const result = await updateProfile(user.userId, values, {\n          newPassword: values.newPassword,\n          confirmPassword: values.confirmPassword\n        });\n        setMessage(result.message);\n        if (result.message.includes('Password updated')) {\n          formikPassword.resetForm();\n        }\n      }, setLoading, error => setError(error.message));\n    }\n  });\n  const handleAttachmentBoxToggle = () => {\n    setShowAttachmentBox(!showAttachmentBox);\n  };\n  useEffect(() => {\n    if (user) {\n      formikProfile.setValues({\n        username: user.username || '',\n        name: user.name || '',\n        lastName: user.lastName || '',\n        age: user.age || '',\n        email: user.email || ''\n      });\n    }\n    console.log(\"USER FORMIK: \", user);\n  }, [user]);\n  useEscapeKeyHandler(() => {\n    setShowAttachmentBox(false);\n  });\n  const handleAvatarChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setAvatar(file);\n    }\n  };\n  const handleUploadAvatar = async () => {\n    await handleAsyncOperation(async () => {\n      const result = await uploadAvatar(avatar);\n      setTimeout(() => {\n        setShowAttachmentBox(false);\n      }, 1000);\n      setSuccessUploadMessage(result.message);\n    }, setLoading, error => setError(error.message));\n  };\n  const handleDeleteAvatar = async () => {\n    await handleAsyncOperation(async () => {\n      const result = await deleteAvatar(user.userId);\n      setSuccessUploadMessage(result.message);\n    }, setLoading, error => setError(error.message));\n  };\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm('Are you sure you want to delete this account?');\n    if (!confirmed) return;\n    await handleAsyncOperation(async () => {\n      await deleteAccountService(user.userId);\n      setTimeout(() => {\n        dispatch(logOutAction());\n        navigate('/');\n      }, 2000);\n      setMessage('Account deleted successfully');\n    }, setLoading, error => setError(error.message));\n  };\n  const refreshUserData = async () => {\n    const result = await personInfo(user.userId);\n  };\n  const handleResendVerification = async () => {\n    await handleAsyncOperation(async () => {\n      await resendVerification();\n      setMessage('Email verification sent');\n    }, setLoading, error => setError(error.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-info-modal-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formikProfile.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-photo-header\",\n        onClick: handleAttachmentBoxToggle,\n        title: \"Click to change profile picture\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar ? URL.createObjectURL(avatar) : user.userAvatar,\n          alt: \"Change Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), Object.entries(formikProfile.values).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs-update-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: key.includes('Password') ? 'password' : 'text',\n          id: key,\n          name: key,\n          value: value,\n          onChange: formikProfile.handleChange,\n          onBlur: formikProfile.handleBlur\n          // disabled={key === 'username'}\n          ,\n          autoComplete: key === 'password' ? 'on' : 'off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), key === 'email' && !user.emailVerified && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-xmark\",\n          onClick: handleResendVerification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), key === 'email' && user.emailVerified && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formikPassword.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            name: \"newPassword\",\n            value: formikPassword.values.newPassword,\n            onChange: formikPassword.handleChange,\n            onBlur: formikPassword.handleBlur,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: formikPassword.values.confirmPassword,\n            onChange: formikPassword.handleChange,\n            onBlur: formikPassword.handleBlur,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), formikPassword.touched.newPassword && formikPassword.errors.newPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorFormMessage\",\n        children: formikPassword.errors.newPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this) : null, formikPassword.touched.confirmPassword && formikPassword.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorFormMessage\",\n        children: formikPassword.errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), showAttachmentBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attachment-user-photo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change Profile Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"avatar\",\n          name: \"avatar\",\n          accept: \"image/*\",\n          onChange: handleAvatarChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadAvatar,\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteAvatar,\n          children: \"Delete Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), successUploadMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: successUploadMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-account-button\",\n      onClick: handleDeleteAccount,\n      children: \"Delete Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1em\",\n        fontSize: \"1.2rem\"\n      },\n      children: [error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-loader\",\n        children: /*#__PURE__*/_jsxDEV(BarLoader, {\n          color: \"#fe3c72\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInfo, \"S1ai6T+e6GOVfUAIIcNtAMw5IT4=\", false, function () {\n  return [useAuthContext, useNavigate, useFormik, useFormik, useEscapeKeyHandler];\n});\n_c = UserInfo;\nexport default UserInfo;\nvar _c;\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useEffect","useAuthContext","logOutAction","updateUserDataAction","useNavigate","useEscapeKeyHandler","LogoutButton","updateProfile","uploadAvatar","deleteAvatar","deleteAccountService","resendVerification","BarLoader","handleAsyncOperation","useFormik","Yup","personInfo","jsxDEV","_jsxDEV","UserInfo","_s","state","dispatch","user","loading","setLoading","error","setError","message","setMessage","successUploadMessage","setSuccessUploadMessage","avatar","setAvatar","showAttachmentBox","setShowAttachmentBox","navigate","formikProfile","initialValues","username","name","lastName","age","email","emailVerified","validationSchema","object","string","required","number","positive","integer","onSubmit","values","result","userId","updatedData","formikPassword","newPassword","confirmPassword","min","matches","oneOf","ref","includes","resetForm","handleAttachmentBoxToggle","setValues","console","log","handleAvatarChange","e","file","target","files","handleUploadAvatar","setTimeout","handleDeleteAvatar","handleDeleteAccount","confirmed","window","confirm","refreshUserData","handleResendVerification","className","children","handleSubmit","onClick","title","src","URL","createObjectURL","userAvatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value","htmlFor","charAt","toUpperCase","slice","type","id","onChange","handleChange","onBlur","handleBlur","autoComplete","touched","errors","accept","style","marginTop","fontSize","color","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport {logOutAction, updateUserDataAction } from '../../context/auth/actions';\nimport { useNavigate } from 'react-router-dom';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport LogoutButton from '../../components/LogoutButton/LogoutButton';\nimport {\n  updateProfile,\n  uploadAvatar,\n  deleteAvatar,\n  deleteAccountService,\n  resendVerification,\n} from '../../api/services/userServices';\nimport { BarLoader } from 'react-spinners';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { personInfo } from '../../api/users';\n\nconst UserInfo = () => {\n  const { state, dispatch } = useAuthContext();\n  const { user } = state;\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [successUploadMessage, setSuccessUploadMessage] = useState('');\n  const [avatar, setAvatar] = useState(null);\n  const [showAttachmentBox, setShowAttachmentBox] = useState(false);\n  const navigate = useNavigate();\n\n\n  const formikProfile = useFormik({\n    initialValues: {\n      username: user.username || '',\n      name: user.name || '',\n      lastName: user.lastName || '',\n      age: user.age || '',\n      email: user.email || '',\n      emailVerified: user.emailVerified || ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required('Name is required'),\n      lastName: Yup.string().required('Last name is required'),\n      age: Yup.number().required('Age is required').positive().integer(),\n      email: Yup.string()\n        .email('Invalid email address')\n        .required('Email is required'),\n    }),\n    onSubmit: async (values) => {\n      await handleAsyncOperation(\n        async () => {\n          const result = await updateProfile(user.userId, values, {});\n          dispatch(updateUserDataAction(result.updatedData));\n          setMessage(result.message);\n        },\n        setLoading,\n        (error) => setError(error.message),\n      );\n    },\n  });\n\n  const formikPassword = useFormik({\n    initialValues: {\n      newPassword: '',\n      confirmPassword: '',\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string()\n        .min(8, 'Password must contain at least 8 characters')\n        .matches(/[A-Z]/, 'Password must contain at least one uppercase letter')\n        .matches(/[a-z]/, 'Password must contain at least one lowercase letter')\n        .matches(/[0-9]/, 'Password must contain at least one number')\n        .matches(\n          /[@$!%*?&#]/,\n          'Password must contain at least one special character',\n        ),\n      confirmPassword: Yup.string().oneOf(\n        [Yup.ref('newPassword'), null],\n        \"Passwords don't match\",\n      ),\n    }),\n    onSubmit: async (values) => {\n      await handleAsyncOperation(\n        async () => {\n          const result = await updateProfile(user.userId, values, {\n            newPassword: values.newPassword,\n            confirmPassword: values.confirmPassword,\n          });\n          setMessage(result.message);\n          if (result.message.includes('Password updated')) {\n            formikPassword.resetForm();\n            \n          }\n        },\n        setLoading,\n        (error) => setError(error.message),\n      );\n    },\n  });\n\n  const handleAttachmentBoxToggle = () => {\n    setShowAttachmentBox(!showAttachmentBox);\n  };\n\n  useEffect(() => {\n    if(user) {\n      formikProfile.setValues({\n        username: user.username || '',\n        name: user.name || '',\n        lastName: user.lastName || '',\n        age: user.age || '',\n        email: user.email || '',\n      })\n    }\n\n    console.log(\"USER FORMIK: \", user)\n  \n  }, [user])\n\n  \n\n  \n\n  useEscapeKeyHandler(() => {\n    setShowAttachmentBox(false);\n  });\n\n  const handleAvatarChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setAvatar(file);\n    }\n  };\n\n  const handleUploadAvatar = async () => {\n    await handleAsyncOperation(\n      async () => {\n        const result = await uploadAvatar(avatar);\n        setTimeout(() => {\n          setShowAttachmentBox(false);\n        }, 1000);\n        setSuccessUploadMessage(result.message);\n      },\n      setLoading,\n      (error) => setError(error.message),\n    );\n  };\n\n  const handleDeleteAvatar = async () => {\n    await handleAsyncOperation(\n      async () => {\n        const result = await deleteAvatar(user.userId);\n        setSuccessUploadMessage(result.message);\n      },\n      setLoading,\n      (error) => setError(error.message),\n    );\n  };\n\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm(\n      'Are you sure you want to delete this account?',\n    );\n    if (!confirmed) return;\n\n    await handleAsyncOperation(\n      async () => {\n        await deleteAccountService(user.userId);\n        setTimeout(() => {\n          dispatch(logOutAction());\n          navigate('/');\n        }, 2000);\n        setMessage('Account deleted successfully');\n      },\n      setLoading,\n      (error) => setError(error.message),\n    );\n  };\n\n  const refreshUserData = async () => {\n    const result = await personInfo(user.userId)\n  }\n\n  const handleResendVerification = async () => {\n    await handleAsyncOperation(\n      async () => {\n        await resendVerification();\n        setMessage('Email verification sent');\n      },\n      setLoading,\n      (error) => setError(error.message),\n    );\n  };\n\n\n  return (\n    <div className=\"user-info-modal-wrapper\">\n      <form onSubmit={formikProfile.handleSubmit}>\n        <div\n          className=\"user-photo-header\"\n          onClick={handleAttachmentBoxToggle}\n          title=\"Click to change profile picture\"\n        >\n          <img\n            src={avatar ? URL.createObjectURL(avatar) : user.userAvatar}\n            alt=\"Change Avatar\"\n          />\n          <h1>{user.username}</h1>\n        </div>\n        {Object.entries(formikProfile.values).map(([key, value]) => (\n          <div className=\"form-inputs-update-profile\" key={key}>\n            <label htmlFor={key}>\n              {key.charAt(0).toUpperCase() + key.slice(1)}:\n            </label>\n            <input\n              type={key.includes('Password') ? 'password' : 'text'}\n              id={key}\n              name={key}\n              value={value}\n              onChange={formikProfile.handleChange}\n              onBlur={formikProfile.handleBlur}\n              // disabled={key === 'username'}\n              autoComplete={key === 'password' ? 'on' : 'off'}\n            />\n\n            {key === 'email' && !user.emailVerified && (\n              <i\n                className=\"fa-solid fa-circle-xmark\"\n                onClick={handleResendVerification}\n              ></i>\n            )}\n            {key === 'email' && user.emailVerified && (\n              <i className=\"fa-solid fa-circle-check\"></i>\n            )}\n          </div>\n        ))}\n        <button type=\"submit\">Save Changes</button>\n      </form>\n\n      <form onSubmit={formikPassword.handleSubmit}>\n        <div className=\"password-section\">\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"newPassword\">New Password:</label>\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              name=\"newPassword\"\n              value={formikPassword.values.newPassword}\n              onChange={formikPassword.handleChange}\n              onBlur={formikPassword.handleBlur}\n              autoComplete=\"true\"\n            />\n          </div>\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={formikPassword.values.confirmPassword}\n              onChange={formikPassword.handleChange}\n              onBlur={formikPassword.handleBlur}\n              autoComplete=\"true\"\n            />\n          </div>\n        </div>\n        <button type=\"submit\">Change Password</button>\n        {formikPassword.touched.newPassword &&\n        formikPassword.errors.newPassword ? (\n          <div className=\"errorFormMessage\">\n            {formikPassword.errors.newPassword}\n          </div>\n        ) : null}\n        {formikPassword.touched.confirmPassword &&\n        formikPassword.errors.confirmPassword ? (\n          <div className=\"errorFormMessage\">\n            {formikPassword.errors.confirmPassword}\n          </div>\n        ) : null}\n      </form>\n\n      {showAttachmentBox && (\n        <div className=\"page-overlay\">\n          <div className=\"attachment-user-photo-box\">\n            <h3>Change Profile Photo</h3>\n            <input\n              type=\"file\"\n              id=\"avatar\"\n              name=\"avatar\"\n              accept=\"image/*\"\n              onChange={handleAvatarChange}\n            />\n            <button onClick={handleUploadAvatar}>Upload Photo</button>\n            <button onClick={handleDeleteAvatar}>Delete Photo</button>\n            {successUploadMessage && <p>{successUploadMessage}</p>}\n          </div>\n        </div>\n      )}\n\n      <button className=\"delete-account-button\" onClick={handleDeleteAccount}>\n        Delete Account\n      </button>\n      <LogoutButton dispatch={dispatch} />\n      {message && <p>{message}</p>}\n      <div style={{marginTop: \"1em\", fontSize: \"1.2rem\"}}>\n        {error && <h2>{error}</h2>}\n        {loading && (\n          <div className=\"bar-loader\">\n            <BarLoader color=\"#fe3c72\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}