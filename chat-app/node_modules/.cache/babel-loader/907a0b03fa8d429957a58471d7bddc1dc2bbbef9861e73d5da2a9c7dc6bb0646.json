{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/NewsFeed/Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'https://instagram120.p.rapidapi.com/api/instagram/profile';\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'X-RapidAPI-Key': '12eaa2c047msh237261d4664f961p17b89djsn90feffa1c8d3',\n          'X-RapidAPI-Host': 'instagram120.p.rapidapi.com'\n        },\n        body: JSON.stringify({\n          username: 'instagram'\n        })\n      };\n      try {\n        const response = await fetch(url, options);\n        const result = await response.json();\n        setUserData(result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures this effect runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-feed-posts\",\n    children: userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(userData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"Q/bN2hINckB+VINYSZfns3MkAk8=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Feed","_s","userData","setUserData","fetchData","url","options","method","headers","body","JSON","stringify","username","response","fetch","result","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/NewsFeed/Feed.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Feed = () => {\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'https://instagram120.p.rapidapi.com/api/instagram/profile';\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'X-RapidAPI-Key': '12eaa2c047msh237261d4664f961p17b89djsn90feffa1c8d3',\n          'X-RapidAPI-Host': 'instagram120.p.rapidapi.com',\n        },\n        body: JSON.stringify({ username: 'instagram' }),\n      };\n      \n      try {\n        const response = await fetch(url, options);\n        const result = await response.json();\n        setUserData(result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures this effect runs only once on component mount\n\n  return (\n    <div className='news-feed-posts'>\n      {userData ? (\n        <div>\n          <h2>User Data</h2>\n          <pre>{JSON.stringify(userData, null, 2)}</pre>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,GAAG,GAAG,2DAA2D;MACvE,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,gBAAgB,EAAE,oDAAoD;UACtE,iBAAiB,EAAE;QACrB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAE;QAAY,CAAC;MAChD,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAEC,OAAO,CAAC;QAC1C,MAAMS,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACpCb,WAAW,CAACY,MAAM,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDb,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKoB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BlB,QAAQ,gBACPH,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBzB,OAAA;QAAAqB,QAAA,EAAMV,IAAI,CAACC,SAAS,CAACT,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,gBAENzB,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxCID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}