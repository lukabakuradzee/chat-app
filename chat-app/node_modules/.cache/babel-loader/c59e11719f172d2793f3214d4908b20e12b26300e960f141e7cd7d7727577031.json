{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/ForgetPassword/ForgetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport { resetPassword, resetPasswordRequest } from '../../api/services/userServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgetPasswordModal = ({\n  onClose\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(second);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    await handleAsyncOperation(async () => {\n      await resetPasswordRequest();\n      onClose();\n    }, setLoading, erorr => setMessage(error.message));\n  };\n  useEscapeKeyHandler(onClose);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"close\",\n      onClick: onClose,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-reset-request-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Recovery Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-envelope user-email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sending password reset instructions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgetPasswordModal, \"FhpEcaOhC3ReJKFB5Vmw4sE27bI=\", false, function () {\n  return [useEscapeKeyHandler];\n});\n_c = ForgetPasswordModal;\nexport default ForgetPasswordModal;\nvar _c;\n$RefreshReg$(_c, \"ForgetPasswordModal\");","map":{"version":3,"names":["React","useState","useEscapeKeyHandler","handleAsyncOperation","resetPassword","resetPasswordRequest","jsxDEV","_jsxDEV","ForgetPasswordModal","onClose","_s","email","setEmail","error","setError","second","message","setMessage","loading","setLoading","handleSubmit","e","preventDefault","erorr","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","autoComplete","disabled","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/ForgetPassword/ForgetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport { resetPassword, resetPasswordRequest } from '../../api/services/userServices';\n\nconst ForgetPasswordModal = ({ onClose }) => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(second)\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n     await handleAsyncOperation(async () => {\n        await resetPasswordRequest();\n        onClose()\n     }, setLoading, (erorr) => setMessage(error.message))\n    }\n\n  useEscapeKeyHandler(onClose);\n\n  return (\n    <div className=\"password-reset-modal\">\n      <span className=\"close\" onClick={onClose}>\n        &times;\n      </span>\n      <form onSubmit={handleSubmit}>\n        <div className=\"password-reset-request-input\">\n          <label htmlFor=\"email\">Recovery Email</label>\n          <i className=\"fa-solid fa-envelope user-email\"></i>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            autoComplete='on'\n          />\n          <button type=\"submit\" disabled={loading}>\n            Send\n          </button>\n        </div>\n      </form>\n      {loading && <p>Sending password reset instructions...</p>}\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ForgetPasswordModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}