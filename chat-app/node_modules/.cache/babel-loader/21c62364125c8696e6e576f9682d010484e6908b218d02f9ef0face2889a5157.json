{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/ForgetPassword/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { passwordRegex } from '../../utils/Regex';\nimport { BarLoader } from 'react-spinners';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { resetPassword } from '../../api/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [showForm, setShowForm] = useState(true);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n  const getTokenFromUrl = () => {\n    const params = new URLSearchParams(location.search);\n    return params.get('token');\n  };\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setErrorMessage(\"Passwords Don't Match!\");\n      return;\n    } else {\n      setErrorMessage('');\n    }\n    if (!passwordRegex.test(newPassword)) {\n      setErrorMessage(\"Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.\");\n      return;\n    }\n    const resetToken = getTokenFromUrl();\n    if (!resetToken) {\n      setErrorMessage('Please for resetting password ');\n      return;\n    }\n    try {\n      const data = await resetPassword(newPassword, resetToken);\n      setMessage(data.message);\n      setLoading(true);\n      setTimeout(() => {\n        navigate('/');\n      }, 2000);\n      setShowForm(false);\n    } catch (error) {\n      setMessage('Failed to change password');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      className: \"password-reset-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newPassword\",\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-reset-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-lock password-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), showPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-eye\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-eye-slash\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-reset-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-lock password-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), showPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-eye\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-eye-slash\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-loader\",\n        style: {},\n        children: /*#__PURE__*/_jsxDEV(BarLoader, {\n          color: \"#fe3c72\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 24\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"WM6uULtm8BqdOULGpPTgjy1Fk5k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","passwordRegex","BarLoader","useNavigate","useLocation","resetPassword","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","loading","setLoading","message","setMessage","showForm","setShowForm","navigate","location","showPassword","setShowPassword","togglePasswordVisibility","prevShowPassword","getTokenFromUrl","params","URLSearchParams","search","get","handleResetPassword","e","preventDefault","test","resetToken","data","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","autoComplete","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/ForgetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { passwordRegex } from '../../utils/Regex';\nimport { BarLoader } from 'react-spinners';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { resetPassword } from '../../api/auth';\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('');\n  const [showForm, setShowForm] = useState(true)\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [showPassword, setShowPassword] = useState(false)\n\n  const togglePasswordVisibility = () => {\n     setShowPassword((prevShowPassword) => (!prevShowPassword));\n  }\n\n  const getTokenFromUrl = () => {\n    const params = new URLSearchParams(location.search);\n    return params.get('token')\n  }\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n      if (newPassword !== confirmPassword) {\n        setErrorMessage(\"Passwords Don't Match!\");\n        return;\n      } else {\n         setErrorMessage('')\n      }\n\n      if(!passwordRegex.test(newPassword)) {\n        setErrorMessage(\"Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.\");\n        return;\n      }\n      const resetToken = getTokenFromUrl();\n      if (!resetToken) {\n        setErrorMessage('Please for resetting password ');\n        return;\n      }\n\n    try {\n      const data = await resetPassword(newPassword, resetToken);\n      setMessage(data.message)\n      setLoading(true);\n      setTimeout(() => {\n        navigate('/')\n      }, 2000);\n      setShowForm(false)\n    } catch (error) {\n      setMessage('Failed to change password');\n      console.error(error);\n    }\n  };\n\n  \n  return (\n    <div className=\"password-reset-container\">\n      <h2>Password Reset</h2>\n      {showForm && (\n      <form onSubmit={handleResetPassword} className=\"password-reset-form\">\n        <label htmlFor=\"newPassword\">New Password:</label>\n        <div className=\"password-reset-input\">\n        <i className=\"fa-solid fa-lock password-icon\"></i>\n        <input\n          type={showPassword ? \"text\" : \"password\"}\n          id=\"newPassword\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n          autoComplete='on'\n        />\n         {showPassword ? (\n                <i\n                  className=\"fa-solid fa-eye\"\n                  onClick={togglePasswordVisibility}\n                ></i>\n              ) : (\n                <i\n                  className=\"fa-solid fa-eye-slash\"\n                  onClick={togglePasswordVisibility}\n                ></i>\n              )}\n        </div>\n        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n        <div className=\"password-reset-input\">\n        <i className=\"fa-solid fa-lock password-icon\"></i>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          autoComplete='on'\n        />\n         {showPassword ? (\n                <i\n                  className=\"fa-solid fa-eye\"\n                  onClick={togglePasswordVisibility}\n                ></i>\n              ) : (\n                <i\n                  className=\"fa-solid fa-eye-slash\"\n                  onClick={togglePasswordVisibility}\n                ></i>\n              )}\n        </div>\n        \n        {loading && (\n        <div className=\"bar-loader\" style={{}}>\n          <BarLoader color=\"#fe3c72\" />\n        </div>\n      )}\n        <button type='submit' onClick={handleResetPassword}>Reset Password</button>\n      </form>\n      )}\n      {errorMessage && <p>{errorMessage}</p> }\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMsB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAMoB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM0B,wBAAwB,GAAGA,CAAA,KAAM;IACpCD,eAAe,CAAEE,gBAAgB,IAAM,CAACA,gBAAiB,CAAC;EAC7D,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACP,QAAQ,CAACQ,MAAM,CAAC;IACnD,OAAOF,MAAM,CAACG,GAAG,CAAC,OAAO,CAAC;EAC5B,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAChB,IAAIzB,WAAW,KAAKE,eAAe,EAAE;MACnCG,eAAe,CAAC,wBAAwB,CAAC;MACzC;IACF,CAAC,MAAM;MACJA,eAAe,CAAC,EAAE,CAAC;IACtB;IAEA,IAAG,CAACd,aAAa,CAACmC,IAAI,CAAC1B,WAAW,CAAC,EAAE;MACnCK,eAAe,CAAC,+GAA+G,CAAC;MAChI;IACF;IACA,MAAMsB,UAAU,GAAGT,eAAe,CAAC,CAAC;IACpC,IAAI,CAACS,UAAU,EAAE;MACftB,eAAe,CAAC,gCAAgC,CAAC;MACjD;IACF;IAEF,IAAI;MACF,MAAMuB,IAAI,GAAG,MAAMjC,aAAa,CAACK,WAAW,EAAE2B,UAAU,CAAC;MACzDlB,UAAU,CAACmB,IAAI,CAACpB,OAAO,CAAC;MACxBD,UAAU,CAAC,IAAI,CAAC;MAChBsB,UAAU,CAAC,MAAM;QACfjB,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,EAAE,IAAI,CAAC;MACRD,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdrB,UAAU,CAAC,2BAA2B,CAAC;MACvCsB,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAGD,oBACEjC,OAAA;IAAKmC,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCpC,OAAA;MAAAoC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtB3B,QAAQ,iBACTb,OAAA;MAAMyC,QAAQ,EAAEf,mBAAoB;MAACS,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClEpC,OAAA;QAAO0C,OAAO,EAAC,aAAa;QAAAN,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDxC,OAAA;QAAKmC,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACrCpC,OAAA;UAAGmC,SAAS,EAAC;QAAgC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDxC,OAAA;UACE2C,IAAI,EAAE1B,YAAY,GAAG,MAAM,GAAG,UAAW;UACzC2B,EAAE,EAAC,aAAa;UAChBC,KAAK,EAAE1C,WAAY;UACnB2C,QAAQ,EAAGnB,CAAC,IAAKvB,cAAc,CAACuB,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;UAChDG,YAAY,EAAC;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,EACAvB,YAAY,gBACNjB,OAAA;UACEmC,SAAS,EAAC,iBAAiB;UAC3Bc,OAAO,EAAE9B;QAAyB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,gBAELxC,OAAA;UACEmC,SAAS,EAAC,uBAAuB;UACjCc,OAAO,EAAE9B;QAAyB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNxC,OAAA;QAAO0C,OAAO,EAAC,iBAAiB;QAAAN,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1DxC,OAAA;QAAKmC,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACrCpC,OAAA;UAAGmC,SAAS,EAAC;QAAgC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDxC,OAAA;UACE2C,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,iBAAiB;UACpBC,KAAK,EAAExC,eAAgB;UACvByC,QAAQ,EAAGnB,CAAC,IAAKrB,kBAAkB,CAACqB,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;UACpDG,YAAY,EAAC;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,EACAvB,YAAY,gBACNjB,OAAA;UACEmC,SAAS,EAAC,iBAAiB;UAC3Bc,OAAO,EAAE9B;QAAyB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,gBAELxC,OAAA;UACEmC,SAAS,EAAC,uBAAuB;UACjCc,OAAO,EAAE9B;QAAyB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EAEL/B,OAAO,iBACRT,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAACe,KAAK,EAAE,CAAC,CAAE;QAAAd,QAAA,eACpCpC,OAAA,CAACL,SAAS;UAACwD,KAAK,EAAC;QAAS;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CACN,eACCxC,OAAA;QAAQ2C,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEvB,mBAAoB;QAAAU,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CACL,EACAjC,YAAY,iBAAIP,OAAA;MAAAoC,QAAA,EAAI7B;IAAY;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrC7B,OAAO,iBAAIX,OAAA;MAAAoC,QAAA,EAAIzB;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACtC,EAAA,CApHID,aAAa;EAAA,QAOAL,WAAW,EACXC,WAAW;AAAA;AAAAuD,EAAA,GARxBnD,aAAa;AAsHnB,eAAeA,aAAa;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}