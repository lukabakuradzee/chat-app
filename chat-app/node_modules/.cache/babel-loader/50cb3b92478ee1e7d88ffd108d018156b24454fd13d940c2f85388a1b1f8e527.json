{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/ForgetPassword/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [succesMessage, setSuccesMessage] = useState(second);\n  const [message, setMessage] = useState('');\n  const handleResetPassword = async () => {\n    try {\n      if (newPassword !== confirmPassword) {}\n      const response = await fetch(`http://localhost:5500/api/users/set-new-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          newPassword\n        })\n      });\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (error) {\n      setMessage('Failed to reset password');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newPassword\",\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"newPassword\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetPassword,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"6cFqmn7ebRHWTSqjlp3V15udwj4=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","succesMessage","setSuccesMessage","second","message","setMessage","handleResetPassword","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/ForgetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [succesMessage, setSuccesMessage] = useState(second)\n  const [message, setMessage] = useState('');\n\n  const handleResetPassword = async () => {\n    try {\n      if (newPassword !== confirmPassword) {\n        \n      }\n\n      const response = await fetch(\n        `http://localhost:5500/api/users/set-new-password`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ newPassword }),\n        },\n      );\n\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (error) {\n      setMessage('Failed to reset password');\n      console.error(error);\n    }\n\n  };\n\n  return (\n    <div className=\"password-reset-container\">\n      <h2>Password Reset</h2>\n      <div>\n        <label htmlFor=\"newPassword\">New Password:</label>\n        <input\n          type=\"password\"\n          id=\"newPassword\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n      </div>\n      <button onClick={handleResetPassword}>Reset Password</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}