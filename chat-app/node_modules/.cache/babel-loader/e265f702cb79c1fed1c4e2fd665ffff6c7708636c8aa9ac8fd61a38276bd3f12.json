{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { resendVerificationEmail, updateUserProfile, deleteAccount } from '../../api/auth';\nimport { logOutAction, updateUserDataAction } from '../../context/auth/actions';\nimport { passwordRegex } from '../../utils/Regex';\nimport { useNavigate } from 'react-router-dom';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [message, setMessage] = useState('');\n  const [successUploadMessage, setSuccessUploadMessage] = useState('');\n  const [formData, setFormData] = useState({\n    name: user.name || '',\n    lastName: user.lastName || '',\n    age: user.age || '',\n    email: user.email || ''\n  });\n  const [passwordData, setPasswordData] = useState({\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [avatar, setAvatar] = useState(localStorage.getItem('userAvatarImage') || user.userAvatar);\n  const [showAttachmentBox, setShowAttachmentBox] = useState(false);\n  const navigate = useNavigate();\n  const handleAttachmentBoxToggle = () => {\n    setShowAttachmentBox(!showAttachmentBox);\n  };\n  useEscapeKeyHandler(() => {\n    setShowAttachmentBox(false);\n  });\n  const handleChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  }, []);\n  const handlePasswordChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPasswordData(prevPasswordData => ({\n      ...prevPasswordData,\n      [name]: value\n    }));\n  };\n  const handleAvatarChange = e => {\n    const file = e.target.files[0]; // Set the selected avatar file\n    if (file) {\n      setAvatar(URL.createObjectURL(file)); // Display the selected file\n      localStorage.setItem('userAvatarImage', URL.createObjectURL(file)); // Save it to localStorage\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!passwordData.newPassword && !passwordData.confirmPassword) {\n        const updatedData = {\n          ...formData\n        };\n        await updateUserProfile(user.userId, updatedData);\n        dispatch(updateUserDataAction(updatedData));\n        setMessage('Successfully updated profile information');\n      } else {\n        if (!passwordRegex.test(passwordData.newPassword)) {\n          throw new Error('Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number, and one special character');\n        }\n        if (passwordData.newPassword !== passwordData.confirmPassword) {\n          throw new Error(\"Passwords don't match\");\n        }\n        const updatedData = {\n          ...formData,\n          password: passwordData.newPassword\n        };\n        await updateUserProfile(user.userId, updatedData);\n        dispatch(updateUserDataAction(updatedData));\n        setMessage('Password updated successfully');\n        setPasswordData({\n          newPassword: '',\n          confirmPassword: ''\n        });\n      }\n    } catch (error) {\n      console.error('Failed to update user profile:', error);\n      setMessage(error.message);\n      return;\n    }\n  };\n  useEffect(() => {\n    const userFromStorage = JSON.parse(localStorage.getItem('user'));\n    if (userFromStorage) {\n      setFormData({\n        name: userFromStorage.name || '',\n        lastName: userFromStorage.lastName || '',\n        age: userFromStorage.age || '',\n        email: userFromStorage.email || ''\n      });\n    }\n  }, [user]);\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm('Are you sure you want to delete this account?');\n    if (!confirmed) return;\n    try {\n      await deleteAccount(user.userId);\n      setTimeout(() => {\n        dispatch(logOutAction());\n        navigate('/');\n      }, 2000);\n      setMessage('Account deleted successfully');\n    } catch (error) {\n      console.error('Failed to delete account', error);\n      setMessage(error.message);\n    }\n  };\n  const handleResendVerification = async token => {\n    try {\n      await resendVerificationEmail(token);\n      setMessage('Email verification sent');\n    } catch (error) {\n      console.error('Failed to send verification email', error);\n      setMessage(error.message);\n    }\n  };\n  const handleUploadAvatar = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', avatar);\n      const response = await fetch('http://localhost:5500/api/users/uploads', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Error uploading avatar :', errorData);\n        throw new Error('Failed to upload avatar');\n      }\n      const responseData = await response.json();\n      const newAvatarUrl = responseData.avatarUrl; // Adjust based on actual response structure\n      localStorage.setItem('userAvatarImage', newAvatarUrl);\n      setAvatar(newAvatarUrl); // Update state with new avatar URL\n      setSuccessUploadMessage('Photo uploaded successfully');\n      setShowAttachmentBox(false); // Hide attachment box after successful upload\n    } catch (error) {\n      console.error('Error uploading avatar:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-info-modal-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-photo-header\",\n        onClick: handleAttachmentBoxToggle,\n        title: \"Click to change profile picture\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), Object.entries(formData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs-update-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: key.includes('Password') ? 'password' : 'text',\n          id: key,\n          name: key,\n          value: value,\n          onChange: handleChange,\n          disabled: key === 'username',\n          autoComplete: key === 'password' ? 'on' : 'off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), key === 'email' && !user.emailVerified && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-xmark\",\n          onClick: handleResendVerification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), key === 'email' && user.emailVerified && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            name: \"newPassword\",\n            value: passwordData.newPassword,\n            onChange: handlePasswordChange,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: passwordData.confirmPassword,\n            onChange: handlePasswordChange,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-account-button\",\n      onClick: handleDeleteAccount,\n      children: \"Delete Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }, this), showAttachmentBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attachment-user-photo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change Profile Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"avatar\",\n          name: \"avatar\",\n          accept: \"image/*\",\n          onChange: handleAvatarChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadAvatar,\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), successUploadMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: successUploadMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInfo, \"UBZXA/v0cqkc9KNmf0pOwIF2qno=\", false, function () {\n  return [useAuthContext, useNavigate, useEscapeKeyHandler];\n});\n_c = UserInfo;\nexport default UserInfo;\nvar _c;\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuthContext","resendVerificationEmail","updateUserProfile","deleteAccount","logOutAction","updateUserDataAction","passwordRegex","useNavigate","useEscapeKeyHandler","jsxDEV","_jsxDEV","UserInfo","_s","state","dispatch","user","message","setMessage","successUploadMessage","setSuccessUploadMessage","formData","setFormData","name","lastName","age","email","passwordData","setPasswordData","newPassword","confirmPassword","avatar","setAvatar","localStorage","getItem","userAvatar","showAttachmentBox","setShowAttachmentBox","navigate","handleAttachmentBoxToggle","handleChange","e","value","target","prevFormData","handlePasswordChange","prevPasswordData","handleAvatarChange","file","files","URL","createObjectURL","setItem","handleSubmit","preventDefault","updatedData","userId","test","Error","password","error","console","userFromStorage","JSON","parse","handleDeleteAccount","confirmed","window","confirm","setTimeout","handleResendVerification","token","handleUploadAvatar","FormData","append","response","fetch","method","headers","Authorization","body","ok","errorData","json","responseData","newAvatarUrl","avatarUrl","className","children","onSubmit","onClick","title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","Object","entries","map","key","htmlFor","charAt","toUpperCase","slice","type","includes","id","onChange","disabled","autoComplete","emailVerified","accept","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { resendVerificationEmail, updateUserProfile, deleteAccount } from '../../api/auth';\nimport { logOutAction, updateUserDataAction } from '../../context/auth/actions';\nimport { passwordRegex } from '../../utils/Regex';\nimport { useNavigate } from 'react-router-dom';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\n\nconst UserInfo = () => {\n  const { state, dispatch } = useAuthContext();\n  const { user } = state;\n  const [message, setMessage] = useState('');\n  const [successUploadMessage, setSuccessUploadMessage] = useState('');\n  const [formData, setFormData] = useState({\n    name: user.name || '',\n    lastName: user.lastName || '',\n    age: user.age || '',\n    email: user.email || '',\n  });\n  const [passwordData, setPasswordData] = useState({\n    newPassword: '',\n    confirmPassword: '',\n  });\n  const [avatar, setAvatar] = useState(localStorage.getItem('userAvatarImage') || user.userAvatar);\n  const [showAttachmentBox, setShowAttachmentBox] = useState(false);\n  const navigate = useNavigate();\n\n  const handleAttachmentBoxToggle = () => {\n    setShowAttachmentBox(!showAttachmentBox);\n  };\n\n  useEscapeKeyHandler(() => {\n    setShowAttachmentBox(false);\n  });\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  }, []);\n\n  const handlePasswordChange = (e) => {\n    const { name, value } = e.target;\n    setPasswordData((prevPasswordData) => ({\n      ...prevPasswordData,\n      [name]: value,\n    }));\n  };\n\n  const handleAvatarChange = (e) => {\n    const file = e.target.files[0]; // Set the selected avatar file\n    if (file) {\n      setAvatar(URL.createObjectURL(file)); // Display the selected file\n      localStorage.setItem('userAvatarImage', URL.createObjectURL(file)); // Save it to localStorage\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (!passwordData.newPassword && !passwordData.confirmPassword) {\n        const updatedData = { ...formData };\n        await updateUserProfile(user.userId, updatedData);\n        dispatch(updateUserDataAction(updatedData));\n        setMessage('Successfully updated profile information');\n      } else {\n        if (!passwordRegex.test(passwordData.newPassword)) {\n          throw new Error(\n            'Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number, and one special character',\n          );\n        }\n        if (passwordData.newPassword !== passwordData.confirmPassword) {\n          throw new Error(\"Passwords don't match\");\n        }\n        const updatedData = {\n          ...formData,\n          password: passwordData.newPassword,\n        };\n        await updateUserProfile(user.userId, updatedData);\n        dispatch(updateUserDataAction(updatedData));\n        setMessage('Password updated successfully');\n        setPasswordData({ newPassword: '', confirmPassword: '' });\n      }\n    } catch (error) {\n      console.error('Failed to update user profile:', error);\n      setMessage(error.message);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    const userFromStorage = JSON.parse(localStorage.getItem('user'));\n    if (userFromStorage) {\n      setFormData({\n        name: userFromStorage.name || '',\n        lastName: userFromStorage.lastName || '',\n        age: userFromStorage.age || '',\n        email: userFromStorage.email || '',\n      });\n    }\n  }, [user]);\n\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm(\n      'Are you sure you want to delete this account?',\n    );\n    if (!confirmed) return;\n    try {\n      await deleteAccount(user.userId);\n      setTimeout(() => {\n        dispatch(logOutAction());\n        navigate('/');\n      }, 2000);\n      setMessage('Account deleted successfully');\n    } catch (error) {\n      console.error('Failed to delete account', error);\n      setMessage(error.message);\n    }\n  };\n\n  const handleResendVerification = async (token) => {\n    try {\n      await resendVerificationEmail(token);\n      setMessage('Email verification sent');\n    } catch (error) {\n      console.error('Failed to send verification email', error);\n      setMessage(error.message);\n    }\n  };\n\n  const handleUploadAvatar = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', avatar);\n\n      const response = await fetch('http://localhost:5500/api/users/uploads', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n        },\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Error uploading avatar :', errorData);\n        throw new Error('Failed to upload avatar');\n      }\n\n      const responseData = await response.json();\n      const newAvatarUrl = responseData.avatarUrl; // Adjust based on actual response structure\n      localStorage.setItem('userAvatarImage', newAvatarUrl);\n\n      setAvatar(newAvatarUrl); // Update state with new avatar URL\n      setSuccessUploadMessage('Photo uploaded successfully');\n      setShowAttachmentBox(false); // Hide attachment box after successful upload\n    } catch (error) {\n      console.error('Error uploading avatar:', error.message);\n    }\n  };\n\n  return (\n    <div className=\"user-info-modal-wrapper\">\n      <form onSubmit={handleSubmit}>\n        <div\n          className=\"user-photo-header\"\n          onClick={handleAttachmentBoxToggle}\n          title=\"Click to change profile picture\"\n        >\n          <img\n            src={avatar}\n            alt=\"Profile\"\n          />\n          <h1>{user.username}</h1>\n        </div>\n        {Object.entries(formData).map(([key, value]) => (\n          <div className=\"form-inputs-update-profile\" key={key}>\n            <label htmlFor={key}>\n              {key.charAt(0).toUpperCase() + key.slice(1)}:\n            </label>\n            <input\n              type={key.includes('Password') ? 'password' : 'text'}\n              id={key}\n              name={key}\n              value={value}\n              onChange={handleChange}\n              disabled={key === 'username'}\n              autoComplete={key === 'password' ? 'on' : 'off'}\n            />\n            {key === 'email' && !user.emailVerified && (\n              <i\n                className=\"fa-solid fa-circle-xmark\"\n                onClick={handleResendVerification}\n              ></i>\n            )}\n            {key === 'email' && user.emailVerified && (\n              <i className=\"fa-solid fa-circle-check\"></i>\n            )}\n          </div>\n        ))}\n        <div className=\"password-section\">\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"newPassword\">New Password:</label>\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              name=\"newPassword\"\n              value={passwordData.newPassword}\n              onChange={handlePasswordChange}\n              autoComplete=\"true\"\n            />\n          </div>\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={passwordData.confirmPassword}\n              onChange={handlePasswordChange}\n              autoComplete=\"true\"\n            />\n          </div>\n        </div>\n        <button type=\"submit\">Save Changes</button>\n      </form>\n      <button className=\"delete-account-button\" onClick={handleDeleteAccount}>\n        Delete Account\n      </button>\n      {message && <p>{message}</p>}\n      {showAttachmentBox && (\n        <div className=\"page-overlay\">\n          <div className=\"attachment-user-photo-box\">\n            <h3>Change Profile Photo</h3>\n            <input\n              type=\"file\"\n              id=\"avatar\"\n              name=\"avatar\"\n              accept=\"image/*\"\n              onChange={handleAvatarChange}\n            />\n            <button onClick={handleUploadAvatar}>Upload Photo</button>\n            {successUploadMessage && <p>{successUploadMessage}</p>}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}