{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nfunction parseJWT(token) {\n  try {\n    return jwtDecode(token);\n  } catch (error) {\n    console.error('Error parsing JWT:', error);\n    return null;\n  }\n}\nfunction isTokenExpired(token) {\n  const currentTime = Date.now() / 1000;\n  const decoded = jwtDecode(token);\n  return decoded.exp < currentTime;\n}\nfunction isTokenValid(token) {\n  return token && !isTokenExpired(token);\n}\nfunction saveToken(token) {\n  localStorage.setItem('accessToken', token);\n}\nfunction clearToken() {\n  localStorage.removeItem('accessToken');\n}\nfunction saveRefreshToken(refreshToken) {\n  localStorage.setItem('refreshToken', refreshToken);\n}\nfunction clearRefreshToken() {\n  localStorage.removeItem('refreshToken');\n}\nfunction getRefreshToken() {\n  return localStorage.getItem('refreshToken');\n}\nexport { saveToken, clearToken, isTokenValid, parseJWT, saveRefreshToken, clearRefreshToken, getRefreshToken };","map":{"version":3,"names":["jwtDecode","parseJWT","token","error","console","isTokenExpired","currentTime","Date","now","decoded","exp","isTokenValid","saveToken","localStorage","setItem","clearToken","removeItem","saveRefreshToken","refreshToken","clearRefreshToken","getRefreshToken","getItem"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/utils/jwt.js"],"sourcesContent":["import { jwtDecode } from 'jwt-decode';\n\nfunction parseJWT(token) {\n  try {\n    return jwtDecode(token);\n  } catch (error) {\n    console.error('Error parsing JWT:', error);\n    return null;\n  }\n}\n\nfunction isTokenExpired(token) {\n  const currentTime = Date.now() / 1000;\n  const decoded = jwtDecode(token);\n  return decoded.exp < currentTime;\n}\n\nfunction isTokenValid(token) {\n  return token && !isTokenExpired(token);\n}\n\nfunction saveToken(token) {\n  localStorage.setItem('accessToken', token);\n}\n\nfunction clearToken() {\n  localStorage.removeItem('accessToken');\n}\n\nfunction saveRefreshToken(refreshToken) {\n  localStorage.setItem('refreshToken', refreshToken);\n}\n\nfunction clearRefreshToken() {\n  localStorage.removeItem('refreshToken');\n}\n\nfunction getRefreshToken() {\n  return localStorage.getItem('refreshToken');\n}\n\nexport {\n  saveToken,\n  clearToken,\n  isTokenValid,\n  parseJWT,\n  saveRefreshToken,\n  clearRefreshToken,\n  getRefreshToken,\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB,IAAI;IACF,OAAOF,SAAS,CAACE,KAAK,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,IAAI;EACb;AACF;AAEA,SAASE,cAAcA,CAACH,KAAK,EAAE;EAC7B,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;EACrC,MAAMC,OAAO,GAAGT,SAAS,CAACE,KAAK,CAAC;EAChC,OAAOO,OAAO,CAACC,GAAG,GAAGJ,WAAW;AAClC;AAEA,SAASK,YAAYA,CAACT,KAAK,EAAE;EAC3B,OAAOA,KAAK,IAAI,CAACG,cAAc,CAACH,KAAK,CAAC;AACxC;AAEA,SAASU,SAASA,CAACV,KAAK,EAAE;EACxBW,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEZ,KAAK,CAAC;AAC5C;AAEA,SAASa,UAAUA,CAAA,EAAG;EACpBF,YAAY,CAACG,UAAU,CAAC,aAAa,CAAC;AACxC;AAEA,SAASC,gBAAgBA,CAACC,YAAY,EAAE;EACtCL,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEI,YAAY,CAAC;AACpD;AAEA,SAASC,iBAAiBA,CAAA,EAAG;EAC3BN,YAAY,CAACG,UAAU,CAAC,cAAc,CAAC;AACzC;AAEA,SAASI,eAAeA,CAAA,EAAG;EACzB,OAAOP,YAAY,CAACQ,OAAO,CAAC,cAAc,CAAC;AAC7C;AAEA,SACET,SAAS,EACTG,UAAU,EACVJ,YAAY,EACZV,QAAQ,EACRgB,gBAAgB,EAChBE,iBAAiB,EACjBC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}