{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserComment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { usersData } from '../../api/users';\nimport { RingLoader } from 'react-spinners';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { postUserComment } from '../../api/services/userServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserComment = ({\n  postId,\n  userId,\n  text\n}) => {\n  _s();\n  const {\n    state\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [userComments, setUserComments] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const handleUserComment = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const newComment = await postUserComment(postId, user.userId, text);\n      setUserComments([...userComments, newComment]); // Append the new comment to the existing comments array\n      console.log(\"Comment: \", newComment);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-item\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [user.username, \": Comment text\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserComment(postId, userId, text),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UserComment, \"rTvmF0zOxpQAnDU0WQAyRD3NLJI=\", false, function () {\n  return [useAuthContext];\n});\n_c = UserComment;\nexport default UserComment;\nvar _c;\n$RefreshReg$(_c, \"UserComment\");","map":{"version":3,"names":["React","useState","useEffect","usersData","RingLoader","useAuthContext","postUserComment","jsxDEV","_jsxDEV","UserComment","postId","userId","text","_s","state","user","userComments","setUserComments","error","setError","loading","setLoading","handleUserComment","newComment","console","log","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserComment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { usersData } from '../../api/users';\nimport { RingLoader } from 'react-spinners';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { postUserComment } from '../../api/services/userServices';\n\n\nconst UserComment = ({ postId, userId, text }) => {\n  const { state } = useAuthContext();\n  const { user } = state;\n  const [userComments, setUserComments] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const handleUserComment = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const newComment = await postUserComment(postId, user.userId, text);\n      setUserComments([...userComments, newComment]); // Append the new comment to the existing comments array\n      console.log(\"Comment: \", newComment);\n    } catch (error) {\n      setError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n\n  return (\n    <div className=\"comment-component\">\n      <div className=\"comment-list\">\n          <div className=\"comment-list\">\n              <div className=\"comment-item\">\n            {/* <img src={profilePicture} alt=\"\" /> */}\n            <span>{user.username}: Comment text</span>\n          </div>\n          </div>\n      </div>\n      <div className=\"comment-input\">\n        {/* <img src={profilePicutre} alt=\"\" /> */}\n        <input type=\"text\" placeholder=\"Add a comment...\" />\n        <button onClick={() => handleUserComment(postId, userId, text)}>\n          Post\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserComment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}