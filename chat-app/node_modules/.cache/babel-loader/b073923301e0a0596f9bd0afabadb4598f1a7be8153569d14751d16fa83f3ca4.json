{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.scss';\nimport AppRoutes from './Routes';\nimport io from 'socket.io-client';\nimport './reset.css';\nimport { useState, useEffect } from 'react';\nimport PageLoading from './components/PageLoading/PageLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    console.log('Attempting to the socket');\n    const newSocket = io('http://localhost:5500');\n    setSocket(newSocket);\n    const timeOut = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n    newSocket.on('connect', () => {\n      console.log('Connected to socket server');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from socket server');\n    });\n    return () => {\n      newSocket.disconnect();\n      clearTimeout(timeOut);\n    };\n  }, []);\n  useEffect(() => {\n    if (socket) {\n      socket.on('test', message => {\n        console.log('Test event received', message);\n      });\n    }\n  }, [socket]);\n  const emitTestEvent = () => {\n    if (socket) {\n      console.log('Emitting test event to server');\n      socket.emit('test', 'Hello from client');\n    } else {\n      console.log('Socket is not connected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `App ${isLoading ? 'loading' : ''}`,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(AppRoutes, {\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"IZ20JICKY5Cq3SiUUHycB94NQaM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AppRoutes","io","useState","useEffect","PageLoading","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoading","setIsLoading","socket","setSocket","console","log","newSocket","timeOut","setTimeout","on","disconnect","clearTimeout","message","emitTestEvent","emit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/App.js"],"sourcesContent":["import './App.scss';\nimport AppRoutes from './Routes';\nimport io from 'socket.io-client'\nimport './reset.css';\nimport { useState, useEffect } from 'react';\nimport PageLoading from './components/PageLoading/PageLoading';\n\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [socket, setSocket] = useState(null)\n\n  useEffect(() => {\n    console.log('Attempting to the socket')\n    const newSocket = io('http://localhost:5500');\n    setSocket(newSocket);\n\n    const timeOut = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n\n    newSocket.on('connect', () => {\n      console.log('Connected to socket server');\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from socket server');\n    });\n\n\n    return () => {\n      newSocket.disconnect();\n      clearTimeout(timeOut);\n    };\n  }, []);\n\n  useEffect(() => {\n    if(socket) {\n      socket.on('test', (message) => {\n        console.log('Test event received', message)\n      })\n    }\n  }, [socket])\n\n\n  const emitTestEvent = () => {\n    if (socket) {\n      console.log('Emitting test event to server');\n      socket.emit('test', 'Hello from client');\n    } else {\n      console.log('Socket is not connected');\n    }\n  };\n  \n\n  return (\n    <>\n      <div className={`App ${isLoading ? 'loading' : ''}`}>\n        {isLoading && <PageLoading />}\n        {!isLoading && <AppRoutes socket={socket}/>}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,SAAS,MAAM,UAAU;AAChC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,aAAa;AACpB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,MAAMC,SAAS,GAAGhB,EAAE,CAAC,uBAAuB,CAAC;IAC7Ca,SAAS,CAACG,SAAS,CAAC;IAEpB,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;IAEPK,SAAS,CAACG,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BL,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC;IAEFC,SAAS,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;MAC/BL,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC;IAGF,OAAO,MAAM;MACXC,SAAS,CAACI,UAAU,CAAC,CAAC;MACtBC,YAAY,CAACJ,OAAO,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd,IAAGU,MAAM,EAAE;MACTA,MAAM,CAACO,EAAE,CAAC,MAAM,EAAGG,OAAO,IAAK;QAC7BR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEO,OAAO,CAAC;MAC7C,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAGZ,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIX,MAAM,EAAE;MACVE,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CH,MAAM,CAACY,IAAI,CAAC,MAAM,EAAE,mBAAmB,CAAC;IAC1C,CAAC,MAAM;MACLV,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC;EACF,CAAC;EAGD,oBACEV,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAKqB,SAAS,EAAG,OAAMhB,SAAS,GAAG,SAAS,GAAG,EAAG,EAAE;MAAAe,QAAA,GACjDf,SAAS,iBAAIL,OAAA,CAACF,WAAW;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5B,CAACpB,SAAS,iBAAIL,OAAA,CAACN,SAAS;QAACa,MAAM,EAAEA;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC,gBACN,CAAC;AAEP;AAACrB,EAAA,CAvDQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}