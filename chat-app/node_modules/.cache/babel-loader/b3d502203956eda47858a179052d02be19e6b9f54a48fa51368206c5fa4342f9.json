{"ast":null,"code":"const signUp = async user => {\n  const url = 'http://localhost:5500/api/users/register';\n  const resp = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await resp.json();\n  if (resp.ok) {\n    return data;\n  }\n  throw new Error(data.message);\n};\nconst signIn = async user => {\n  const url = 'http://localhost:5500/api/users/login';\n  const resp = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  const data = await resp.json();\n  if (resp.ok) {\n    return data;\n  }\n  throw new Error(data.message);\n};\nconst updateUserProfile = async (userId, updateData) => {\n  const url = `http://localhost:5500/api/users/update-profile/${userId}`;\n  const token = localStorage.getItem('accessToken');\n  const resp = await fetch(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(updateData)\n  });\n  const data = await resp.json();\n  if (resp.ok) {\n    return data;\n  }\n  throw new Error('Error fetching data');\n};\nconst verifyEmailStatus = async token => {\n  const url = `http://localhost:5500/api/users/verify-email/${token}`;\n  const resp = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n  const data = await resp.json();\n  if (resp.ok) {\n    return data;\n  }\n  throw new Error(\"Error fetching data\");\n};\nconst resendVerificationEmail = async () => {\n  const url = `http://localhost:5500/api/users/resend-verification`;\n  const token = localStorage.getItem('accessToken');\n  const resp = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const data = await resp.json();\n  if (resp.ok) {\n    return data;\n  }\n  throw new Error(\"Error fetching resend verification\");\n};\nconst deleteAccount = async userId => {\n  const url = `http://localhost:5500/api/users/delete/${userId}`;\n  const token = localStorage.getItem('accessToken');\n  const resp = await fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      'content-type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const data = await resp.json();\n  console.log(\"data received delete account: \", data);\n  if (resp.ok) {\n    return data;\n  }\n  throw new Error(\"Error fetching data\");\n};\nconst userProfileAvatar = async () => {\n  const url = \"http://localhost:5500/api/users/uploads\";\n  const token = local;\n};\nexport { signUp, signIn, updateUserProfile, verifyEmailStatus, deleteAccount, resendVerificationEmail };","map":{"version":3,"names":["signUp","user","url","resp","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","signIn","updateUserProfile","userId","updateData","token","localStorage","getItem","Authorization","verifyEmailStatus","resendVerificationEmail","deleteAccount","console","log","userProfileAvatar","local"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/api/auth.js"],"sourcesContent":["const signUp = async (user) => {\n  const url = 'http://localhost:5500/api/users/register';\n  const resp = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await resp.json();\n  if (resp.ok) {\n    return data;\n  }\n  throw new Error(data.message);\n};\n\nconst signIn = async (user) => {\n  const url = 'http://localhost:5500/api/users/login';\n  const resp = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(user),\n  });\n  const data = await resp.json();\n  if (resp.ok) {\n    return data;\n  }\n  throw new Error(data.message);\n};\n\nconst updateUserProfile = async (userId, updateData) => {\n  const url = `http://localhost:5500/api/users/update-profile/${userId}`;\n  const token = localStorage.getItem('accessToken');\n\n  \n  const resp = await fetch(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(updateData),\n  });\n\n  const data = await resp.json();\n\n  if(resp.ok) {\n    return data;\n  }\n    throw new Error('Error fetching data');\n  }\n\n  const verifyEmailStatus = async (token) => {\n    const url = `http://localhost:5500/api/users/verify-email/${token}`;\n      const resp = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json',\n        }\n      })\n\n      const data = await resp.json();\n\n      if(resp.ok) {\n        return data;\n      }\n      throw new Error(\"Error fetching data\");\n    }\n\n    const resendVerificationEmail = async () => {\n      const url = `http://localhost:5500/api/users/resend-verification`\n      const token = localStorage.getItem('accessToken');\n      const resp = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n        },\n      })\n      const data = await resp.json();\n\n      if(resp.ok) {\n        return data;\n      }\n\n      throw new Error(\"Error fetching resend verification\")\n    }\n\n    const deleteAccount = async (userId) => {\n      const url = `http://localhost:5500/api/users/delete/${userId}`;\n      const token = localStorage.getItem('accessToken');\n\n      const resp = await fetch(url, {\n        method: \"DELETE\",\n        headers: {\n          'content-type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      })\n\n      \n      const data = await resp.json();\n      console.log(\"data received delete account: \", data)\n      if(resp.ok) {\n        return data;\n      }\n      throw new Error(\"Error fetching data\")\n    }\n    \n    const userProfileAvatar = async () => {\n      const url = \"http://localhost:5500/api/users/uploads\";\n      const token = local\n    }\n  \n    \n\n\nexport { signUp, signIn, updateUserProfile, verifyEmailStatus, deleteAccount, resendVerificationEmail };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}