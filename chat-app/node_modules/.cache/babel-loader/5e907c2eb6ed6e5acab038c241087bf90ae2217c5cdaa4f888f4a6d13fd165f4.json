{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserComment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { usersData } from '../../api/users';\nimport { RingLoader } from 'react-spinners';\nimport { userComments } from '../../api/services/userServices';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserComment = ({\n  imageUrl,\n  userAvatar,\n  username\n}) => {\n  _s();\n  const {\n    state\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [userComments, setUserComments] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const handleUserComment = async (postId, userId, text) => {\n    try {\n      const postUserComment = await userComments(postId, user.userId, text);\n      setUserComments(postUserComment);\n      setLoading(false);\n      console.log(\"User comment\", postUserComment);\n    } catch (error) {\n      setError('Error fetching users data: ' + error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.userAvatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [user.username, \": Comment text\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserComment,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(UserComment, \"3E7d5seYI5wtPQQRJR5zlRDdFlo=\", false, function () {\n  return [useAuthContext];\n});\n_c = UserComment;\nexport default UserComment;\nvar _c;\n$RefreshReg$(_c, \"UserComment\");","map":{"version":3,"names":["React","useState","useEffect","usersData","RingLoader","userComments","useAuthContext","jsxDEV","_jsxDEV","UserComment","imageUrl","userAvatar","username","_s","state","user","setUserComments","error","setError","loading","setLoading","handleUserComment","postId","userId","text","postUserComment","console","log","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserComment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { usersData } from '../../api/users';\nimport { RingLoader } from 'react-spinners';\nimport { userComments } from '../../api/services/userServices';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\n\nconst UserComment = ({ imageUrl, userAvatar, username }) => {\n  const {state} = useAuthContext();\n  const {user} = state;\n  const [userComments, setUserComments] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n\n    const handleUserComment = async (postId, userId, text) => {\n      try {\n        const postUserComment = await userComments(postId, user.userId, text);\n        setUserComments(postUserComment);\n        setLoading(false);\n        console.log(\"User comment\", postUserComment)\n      } catch (error) {\n        setError('Error fetching users data: ' + error);\n        setLoading(false);\n      }\n    };\n\n\n  return (\n    <div className='comment-component'>\n      <div className=\"comment-list\">\n        <div className=\"comment-item\">\n          <img src={user.userAvatar} alt=\"\" />\n          <span>{user.username}: Comment text</span>\n        </div>\n      </div>\n      <div className=\"comment-input\">\n        {/* <img src={profilePicutre} alt=\"\" /> */}\n        <input type=\"text\" placeholder=\"Add a comment...\" />\n        <button onClick={() => handleUserComment}>Post</button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserComment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}