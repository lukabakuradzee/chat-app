{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport 'slick-carousel/slick/slick-theme.css';\n// import { sliderSettings } from '../Slider/Slider';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { BarLoader } from 'react-spinners';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport { createNewPost } from '../../api/services/userServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfilePage = () => {\n  _s();\n  const {\n    state\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [usersInfo, setUsersInfo] = useState([]);\n\n  // useEffect(() => {\n\n  // }, []);\n\n  const handleCreatePost = async () => {\n    await handleAsyncOperation(async () => {\n      await createNewPost();\n    }, setLoading, error => setError(error.message));\n  };\n  const handleClickPost = postId => {\n    setSelectedPost(postId === selectedPost ? null : postId);\n  };\n  useEscapeKeyHandler(() => setSelectedPost(false));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile-info\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreatePost,\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfilePage, \"vaHXCiKeFhJO2hGYl7NGNxrC0rg=\", false, function () {\n  return [useAuthContext, useEscapeKeyHandler];\n});\n_c = UserProfilePage;\nexport default UserProfilePage;\nvar _c;\n$RefreshReg$(_c, \"UserProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useEscapeKeyHandler","useAuthContext","BarLoader","handleAsyncOperation","createNewPost","jsxDEV","_jsxDEV","UserProfilePage","_s","state","user","loading","setLoading","error","setError","selectedPost","setSelectedPost","usersInfo","setUsersInfo","handleCreatePost","message","handleClickPost","postId","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserProfilePage.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport 'slick-carousel/slick/slick-theme.css';\n// import { sliderSettings } from '../Slider/Slider';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { BarLoader } from 'react-spinners';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport { createNewPost } from '../../api/services/userServices';\n\nconst UserProfilePage = () => {\n  const { state } = useAuthContext();\n  const { user } = state;\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [usersInfo, setUsersInfo] = useState([]);\n\n  // useEffect(() => {\n    \n  // }, []);\n\n  const handleCreatePost = async () => {\n      await handleAsyncOperation(async () => {\n        await createNewPost()\n      }, setLoading, (error) => setError(error.message))\n    }\n\n  const handleClickPost = (postId) => {\n    setSelectedPost(postId === selectedPost ? null : postId);\n  };\n\n\n\n  useEscapeKeyHandler(() => setSelectedPost(false));\n  \n\n  return (\n    <div className=\"user-profile-info\">\n      <button onClick={handleCreatePost}>Create New Post</button>\n    </div>\n  );\n};\n\nexport default UserProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,mBAAmB,MAAM,2BAA2B;AAC3D,OAAO,sCAAsC;AAC7C;AACA,SAASC,cAAc,QAAQ,wCAAwC;AACvE,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,oBAAoB,QAAQ,kCAAkC;AACvE,SAASC,aAAa,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGR,cAAc,CAAC,CAAC;EAClC,MAAM;IAAES;EAAK,CAAC,GAAGD,KAAK;EACtB,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAE9C;;EAEA;;EAEA,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMhB,oBAAoB,CAAC,YAAY;MACrC,MAAMC,aAAa,CAAC,CAAC;IACvB,CAAC,EAAEQ,UAAU,EAAGC,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACO,OAAO,CAAC,CAAC;EACpD,CAAC;EAEH,MAAMC,eAAe,GAAIC,MAAM,IAAK;IAClCN,eAAe,CAACM,MAAM,KAAKP,YAAY,GAAG,IAAI,GAAGO,MAAM,CAAC;EAC1D,CAAC;EAIDtB,mBAAmB,CAAC,MAAMgB,eAAe,CAAC,KAAK,CAAC,CAAC;EAGjD,oBACEV,OAAA;IAAKiB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChClB,OAAA;MAAQmB,OAAO,EAAEN,gBAAiB;MAAAK,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCID,eAAe;EAAA,QACDN,cAAc,EAuBhCD,mBAAmB;AAAA;AAAA8B,EAAA,GAxBfvB,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}