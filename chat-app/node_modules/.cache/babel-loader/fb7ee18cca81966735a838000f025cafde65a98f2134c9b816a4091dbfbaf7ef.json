{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ARCHIVE } from '../../constants/routes';\nimport { usersData, usersPosts } from '../../api/users';\nimport { RingLoader } from 'react-spinners';\nimport Slider from 'react-slick';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport UserComment from './UserComment';\nimport { sliderSettings } from '../Slider/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfilePage = () => {\n  _s();\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [usersInfo, setUsersInfo] = useState([]);\n  const [usersPostsFetch, setUserPostsFetch] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const users = await usersData();\n        const posts = await usersPosts();\n        setUsersInfo(users);\n        setUserPostsFetch(posts);\n        setLoading(false); // Set loading to false after both calls are finished\n      } catch (error) {\n        setError('Error while fetching data: ' + error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEscapeKeyHandler(() => setSelectedPost(null));\n  const handleClickPost = postId => {\n    setSelectedPost(postId === selectedPost ? null : postId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile-info\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-loader\",\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(RingLoader, {\n        color: \"#fe3c72\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : usersInfo.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-photo-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.profilePicture,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container-user-profile\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-archive-profile-user\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: ARCHIVE,\n              children: \"View archive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"follow-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [user.username, \" posts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [user.followersCount, \" followers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [user.followingCount, \" following\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-table-cells\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), \"Posts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: usersPostsFetch.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          onClick: () => handleClickPost(post.id),\n          children: [/*#__PURE__*/_jsxDEV(Slider, {\n            ...sliderSettings,\n            children: Array.isArray(post.imageUrl) ? post.imageUrl.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: `Post ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 27\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.imageUrl,\n                alt: `Post ${post.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this), selectedPost === post.id && /*#__PURE__*/_jsxDEV(UserComment, {\n            imageUrl: Array.isArray(post.imageUrl) ? post.imageUrl[0] : post.imageUrl\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-overlay\",\n      onClick: () => setSelectedPost(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfilePage, \"pvAipfdL2MumhMBsZitd4Q85a10=\", false, function () {\n  return [useEscapeKeyHandler];\n});\n_c = UserProfilePage;\nexport default UserProfilePage;\nvar _c;\n$RefreshReg$(_c, \"UserProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","Link","ARCHIVE","usersData","usersPosts","RingLoader","Slider","useEscapeKeyHandler","UserComment","sliderSettings","jsxDEV","_jsxDEV","UserProfilePage","_s","selectedPost","setSelectedPost","usersInfo","setUsersInfo","usersPostsFetch","setUserPostsFetch","loading","setLoading","error","setError","fetchData","users","posts","handleClickPost","postId","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","user","src","profilePicture","alt","username","to","followersCount","followingCount","post","onClick","id","Array","isArray","imageUrl","image","index","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserProfilePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ARCHIVE } from '../../constants/routes';\nimport { usersData, usersPosts } from '../../api/users';\nimport { RingLoader } from 'react-spinners';\nimport Slider from 'react-slick';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport UserComment from './UserComment';\nimport { sliderSettings } from '../Slider/Slider';\n\nconst UserProfilePage = () => {\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [usersInfo, setUsersInfo] = useState([]);\n  const [usersPostsFetch, setUserPostsFetch] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const users = await usersData();\n        const posts = await usersPosts();\n        setUsersInfo(users);\n        setUserPostsFetch(posts);\n        setLoading(false); // Set loading to false after both calls are finished\n      } catch (error) {\n        setError('Error while fetching data: ' + error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEscapeKeyHandler(() => setSelectedPost(null));\n\n  const handleClickPost = (postId) => {\n    setSelectedPost(postId === selectedPost ? null : postId);\n  };\n\n  return (\n    <div className=\"user-profile-info\">\n      {loading ? (\n        <div className=\"bar-loader\" style={{}}>\n          <RingLoader color=\"#fe3c72\" />\n        </div>\n      ) : (\n        usersInfo.map((user) => (\n          <div key={user.id} className=\"profile-header\">\n            <div className=\"user-photo-header\">\n              <img src={user.profilePicture} alt=\"Profile\" />\n              <h1>{user.username}</h1>\n              <div className=\"btn-container-user-profile\">\n                <button className=\"view-archive-profile-user\">\n                  <Link to={ARCHIVE}>View archive</Link>\n                </button>\n              </div>\n              <div className=\"follow-info\">\n                <span>{user.username} posts</span>\n                <span>{user.followersCount} followers</span>\n                <span>{user.followingCount} following</span>\n              </div>\n            </div>\n\n            <h2>\n              <i className=\"fa-solid fa-table-cells\"></i>Posts\n            </h2>\n\n            <div className=\"user-posts\">\n              {usersPostsFetch.map((post) => (\n                <div\n                  key={post.id}\n                  className=\"post\"\n                  onClick={() => handleClickPost(post.id)}\n                >\n                  <Slider {...sliderSettings}>\n                    {Array.isArray(post.imageUrl) ? (\n                      post.imageUrl.map((image, index) => (\n                        <div key={index}>\n                          <img src={image} alt={`Post ${index + 1}`} />\n                        </div>\n                      ))\n                    ) : (\n                      <div>\n                        <img src={post.imageUrl} alt={`Post ${post.id}`} />\n                      </div>\n                    )}\n                  </Slider>\n                  {selectedPost === post.id && (\n                    <UserComment\n                      key={post.id}\n                      imageUrl={Array.isArray(post.imageUrl) ? post.imageUrl[0] : post.imageUrl}\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        ))\n      )}\n      {error && <h2>{error}</h2>}\n      {selectedPost && (\n        <div className=\"page-overlay\" onClick={() => setSelectedPost(null)}>\n          {/* Additional content for the page overlay */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,SAAS,EAAEC,UAAU,QAAQ,iBAAiB;AACvD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,mBAAmB,MAAM,2BAA2B;AAC3D,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,eAAe,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMtB,SAAS,CAAC,CAAC;QAC/B,MAAMuB,KAAK,GAAG,MAAMtB,UAAU,CAAC,CAAC;QAChCa,YAAY,CAACQ,KAAK,CAAC;QACnBN,iBAAiB,CAACO,KAAK,CAAC;QACxBL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAAC,6BAA6B,GAAGD,KAAK,CAAC;QAC/CD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENjB,mBAAmB,CAAC,MAAMQ,eAAe,CAAC,IAAI,CAAC,CAAC;EAEhD,MAAMY,eAAe,GAAIC,MAAM,IAAK;IAClCb,eAAe,CAACa,MAAM,KAAKd,YAAY,GAAG,IAAI,GAAGc,MAAM,CAAC;EAC1D,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,GAC/BV,OAAO,gBACNT,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAACE,KAAK,EAAE,CAAC,CAAE;MAAAD,QAAA,eACpCnB,OAAA,CAACN,UAAU;QAAC2B,KAAK,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,GAENpB,SAAS,CAACqB,GAAG,CAAEC,IAAI,iBACjB3B,OAAA;MAAmBkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3CnB,OAAA;QAAKkB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCnB,OAAA;UAAK4B,GAAG,EAAED,IAAI,CAACE,cAAe;UAACC,GAAG,EAAC;QAAS;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/CzB,OAAA;UAAAmB,QAAA,EAAKQ,IAAI,CAACI;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBzB,OAAA;UAAKkB,SAAS,EAAC,4BAA4B;UAAAC,QAAA,eACzCnB,OAAA;YAAQkB,SAAS,EAAC,2BAA2B;YAAAC,QAAA,eAC3CnB,OAAA,CAACV,IAAI;cAAC0C,EAAE,EAAEzC,OAAQ;cAAA4B,QAAA,EAAC;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNzB,OAAA;UAAKkB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BnB,OAAA;YAAAmB,QAAA,GAAOQ,IAAI,CAACI,QAAQ,EAAC,QAAM;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClCzB,OAAA;YAAAmB,QAAA,GAAOQ,IAAI,CAACM,cAAc,EAAC,YAAU;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5CzB,OAAA;YAAAmB,QAAA,GAAOQ,IAAI,CAACO,cAAc,EAAC,YAAU;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENzB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAGkB,SAAS,EAAC;QAAyB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,SAC7C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAELzB,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBZ,eAAe,CAACmB,GAAG,CAAES,IAAI,iBACxBnC,OAAA;UAEEkB,SAAS,EAAC,MAAM;UAChBkB,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAACmB,IAAI,CAACE,EAAE,CAAE;UAAAlB,QAAA,gBAExCnB,OAAA,CAACL,MAAM;YAAA,GAAKG,cAAc;YAAAqB,QAAA,EACvBmB,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACK,QAAQ,CAAC,GAC3BL,IAAI,CAACK,QAAQ,CAACd,GAAG,CAAC,CAACe,KAAK,EAAEC,KAAK,kBAC7B1C,OAAA;cAAAmB,QAAA,eACEnB,OAAA;gBAAK4B,GAAG,EAAEa,KAAM;gBAACX,GAAG,EAAG,QAAOY,KAAK,GAAG,CAAE;cAAE;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GADrCiB,KAAK;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACN,CAAC,gBAEFzB,OAAA;cAAAmB,QAAA,eACEnB,OAAA;gBAAK4B,GAAG,EAAEO,IAAI,CAACK,QAAS;gBAACV,GAAG,EAAG,QAAOK,IAAI,CAACE,EAAG;cAAE;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,EACRtB,YAAY,KAAKgC,IAAI,CAACE,EAAE,iBACvBrC,OAAA,CAACH,WAAW;YAEV2C,QAAQ,EAAEF,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACK,QAAQ,CAAC,GAAGL,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC,GAAGL,IAAI,CAACK;UAAS,GADrEL,IAAI,CAACE,EAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACF;QAAA,GAtBIU,IAAI,CAACE,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuBT,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAhDEE,IAAI,CAACU,EAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiDZ,CACN,CACF,EACAd,KAAK,iBAAIX,OAAA;MAAAmB,QAAA,EAAKR;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACzBtB,YAAY,iBACXH,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAACkB,OAAO,EAAEA,CAAA,KAAMhC,eAAe,CAAC,IAAI;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlGID,eAAe;EAAA,QAwBnBL,mBAAmB;AAAA;AAAA+C,EAAA,GAxBf1C,eAAe;AAoGrB,eAAeA,eAAe;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}