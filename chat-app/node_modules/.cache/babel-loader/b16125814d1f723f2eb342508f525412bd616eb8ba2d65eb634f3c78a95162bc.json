{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserComment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { getUserComment, postUserComment } from '../../api/services/userServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserComment = ({\n  postId,\n  comments,\n  setComments\n}) => {\n  _s();\n  const {\n    state\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [commentText, setCommentText] = useState('');\n  const [userComments, setUserComments] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchComments = async () => {\n      setLoading(true);\n      try {\n        const comments = await getUserComment(postId);\n        setUserComments(comments.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        console.log(\"User comments: \", comments);\n      } catch (error) {\n        console.error(error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, [postId]);\n  const handleUserComment = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const newComment = await postUserComment(postId, user.userId, commentText);\n      setUserComments(prevComments => [...prevComments, newComment]);\n      console.log('New Comment: ', newComment);\n      setCommentText('');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-list\",\n      children: userComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-username\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this), \" \", comment.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: commentText,\n        onChange: e => setCommentText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserComment,\n        disabled: loading,\n        children: loading ? 'Posting...' : 'Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(UserComment, \"t6JPO1CMkzYywImC2EcvGdPczX8=\", false, function () {\n  return [useAuthContext];\n});\n_c = UserComment;\nexport default UserComment;\nvar _c;\n$RefreshReg$(_c, \"UserComment\");","map":{"version":3,"names":["React","useState","useEffect","useAuthContext","getUserComment","postUserComment","jsxDEV","_jsxDEV","UserComment","postId","comments","setComments","_s","state","user","commentText","setCommentText","userComments","setUserComments","error","setError","loading","setLoading","fetchComments","sort","a","b","Date","createdAt","console","log","message","handleUserComment","newComment","userId","prevComments","className","children","map","comment","index","username","fileName","_jsxFileName","lineNumber","columnNumber","text","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/UserProfile/UserComment.jsx"],"sourcesContent":["  import React, { useState, useEffect } from 'react';\n  import { useAuthContext } from '../../context/auth/AuthContextProvider';\n  import { getUserComment, postUserComment } from '../../api/services/userServices';\n\n  const UserComment = ({ postId, comments, setComments }) => {\n    const { state } = useAuthContext();\n    const { user } = state;\n    const [commentText, setCommentText] = useState('');\n    const [userComments, setUserComments] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n      const fetchComments = async () => {\n        setLoading(true);\n        try {\n          const comments = await getUserComment(postId);\n          setUserComments(comments.sort((a,b) => new Date(b.createdAt) - new Date(a.createdAt)));\n          console.log(\"User comments: \", comments)\n        } catch (error) {\n          console.error(error)\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchComments();\n    }, [postId]);\n\n    const handleUserComment = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        const newComment = await postUserComment(postId, user.userId, commentText);\n        setUserComments(prevComments => [...prevComments, newComment]);\n        console.log('New Comment: ', newComment);\n        setCommentText('');\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    return (\n      <div className=\"comment-component\">\n        <div className=\"comment-list\">\n          {userComments.map((comment, index) => (\n            <div className=\"comment-item\" key={index}>\n              <p><span className='comment-username'>{user.username}</span> {comment.text}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"comment-input\">\n          <input \n            type=\"text\" \n            placeholder=\"Add a comment...\" \n            value={commentText}\n            onChange={(e) => setCommentText(e.target.value)}\n          />\n          <button onClick={handleUserComment} disabled={loading}>\n            {loading ? 'Posting...' : 'Post'}\n          </button>\n        </div>\n        {error && <p className=\"error-message\">{error}</p>}\n      </div>\n    );\n  };\n\n  export default UserComment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}