{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\n// Import jwtEncode for encoding tokens\n\n// Function to parse JWT token\nfunction parseJWT(token) {\n  const data = jwtDecode(token);\n  return data;\n}\n\n// Function to check if token is valid\nfunction isTokenValid(token) {\n  const currentTime = Date.now() / 1000;\n  const decoded = jwtDecode(token);\n  return decoded.exp > currentTime;\n}\n\n// Function to toggle local storage based on token presence\nfunction toggleLocalStorage(token) {\n  if (token) {\n    // Update token payload before storing it\n    const updatedToken = updateTokenPayload(token);\n    localStorage.setItem(\"accessToken\", updatedToken);\n  } else {\n    localStorage.removeItem(\"accessToken\");\n  }\n}\n\n// Function to update token payload with new user data\nfunction updateTokenPayload(token, newPayload) {\n  try {\n    // Decode the access token to access its payload\n    const decodedToken = jwtDecode(token);\n\n    // Update the payload with the new user data\n    const updatedPayload = {\n      ...decodedToken,\n      ...newPayload\n    };\n\n    // Encode the updated payload to generate a new access token\n    const updatedToken = jwtEncode(updatedPayload);\n    return updatedToken;\n  } catch (error) {\n    console.error('Error decoding or updating token payload:', error);\n    return token; // Return original token in case of error\n  }\n}\nexport { toggleLocalStorage, isTokenValid, parseJWT, updateTokenPayload };","map":{"version":3,"names":["jwtDecode","parseJWT","token","data","isTokenValid","currentTime","Date","now","decoded","exp","toggleLocalStorage","updatedToken","updateTokenPayload","localStorage","setItem","removeItem","newPayload","decodedToken","updatedPayload","jwtEncode","error","console"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/utils/jwt.js"],"sourcesContent":["import { jwtDecode } from 'jwt-decode';\n // Import jwtEncode for encoding tokens\n\n// Function to parse JWT token\nfunction parseJWT(token) {\n    const data = jwtDecode(token);\n    return data;\n}\n\n// Function to check if token is valid\nfunction isTokenValid(token) {\n    const currentTime = Date.now() / 1000;\n    const decoded = jwtDecode(token);\n    return decoded.exp > currentTime;\n}\n\n// Function to toggle local storage based on token presence\nfunction toggleLocalStorage(token) {\n    if (token) {\n        // Update token payload before storing it\n        const updatedToken = updateTokenPayload(token);\n        localStorage.setItem(\"accessToken\", updatedToken);\n    } else {\n        localStorage.removeItem(\"accessToken\");\n    }\n}\n\n// Function to update token payload with new user data\nfunction updateTokenPayload(token, newPayload) {\n    try {\n        // Decode the access token to access its payload\n        const decodedToken = jwtDecode(token);\n      \n        // Update the payload with the new user data\n        const updatedPayload = { ...decodedToken, ...newPayload };\n      \n        // Encode the updated payload to generate a new access token\n        const updatedToken = jwtEncode(updatedPayload);\n      \n        return updatedToken;\n    } catch (error) {\n        console.error('Error decoding or updating token payload:', error);\n        return token; // Return original token in case of error\n    }\n}\n\nexport { toggleLocalStorage, isTokenValid, parseJWT, updateTokenPayload };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACrC;;AAED;AACA,SAASC,QAAQA,CAACC,KAAK,EAAE;EACrB,MAAMC,IAAI,GAAGH,SAAS,CAACE,KAAK,CAAC;EAC7B,OAAOC,IAAI;AACf;;AAEA;AACA,SAASC,YAAYA,CAACF,KAAK,EAAE;EACzB,MAAMG,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;EACrC,MAAMC,OAAO,GAAGR,SAAS,CAACE,KAAK,CAAC;EAChC,OAAOM,OAAO,CAACC,GAAG,GAAGJ,WAAW;AACpC;;AAEA;AACA,SAASK,kBAAkBA,CAACR,KAAK,EAAE;EAC/B,IAAIA,KAAK,EAAE;IACP;IACA,MAAMS,YAAY,GAAGC,kBAAkB,CAACV,KAAK,CAAC;IAC9CW,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,YAAY,CAAC;EACrD,CAAC,MAAM;IACHE,YAAY,CAACE,UAAU,CAAC,aAAa,CAAC;EAC1C;AACJ;;AAEA;AACA,SAASH,kBAAkBA,CAACV,KAAK,EAAEc,UAAU,EAAE;EAC3C,IAAI;IACA;IACA,MAAMC,YAAY,GAAGjB,SAAS,CAACE,KAAK,CAAC;;IAErC;IACA,MAAMgB,cAAc,GAAG;MAAE,GAAGD,YAAY;MAAE,GAAGD;IAAW,CAAC;;IAEzD;IACA,MAAML,YAAY,GAAGQ,SAAS,CAACD,cAAc,CAAC;IAE9C,OAAOP,YAAY;EACvB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACjE,OAAOlB,KAAK,CAAC,CAAC;EAClB;AACJ;AAEA,SAASQ,kBAAkB,EAAEN,YAAY,EAAEH,QAAQ,EAAEW,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}