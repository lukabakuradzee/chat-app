{"ast":null,"code":"export const usersData = async () => {\n  try {\n    const url = \"http://localhost:5500/api/users\";\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n    throw error; // Re-throw the error to propagate it to the caller\n  }\n};\nexport const usersPosts = async () => {\n  try {\n    const urlPosts = \"https://localhost:5500/api/posts\";\n    const response = await fetch(urlPosts);\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n    throw error; // Re-throw the error to propagate it to the caller\n  }\n};\nexport const personInfo = async () => {\n  try {\n    const personUrl = \"https://localhost:5500/api/person\";\n    const response = await fetch(personUrl);\n    if (!response.ok) {\n      throw new Error(\"failed to fetch data\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"error fetching data: \", error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["usersData","url","response","fetch","ok","Error","data","json","error","console","message","usersPosts","urlPosts","personInfo","personUrl"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/api/users.js"],"sourcesContent":["export const usersData = async () => {\n  try {\n    const url = \"http://localhost:5500/api/users\";\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n    throw error; // Re-throw the error to propagate it to the caller\n  }\n};\n\nexport const usersPosts = async () => {\n  try {\n    const urlPosts = \"https://localhost:5500/api/posts\";\n    const response = await fetch(urlPosts);\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n    throw error; // Re-throw the error to propagate it to the caller\n  }\n};\n\nexport const personInfo = async () => {\n  try {\n    const personUrl = \"https://localhost:5500/api/person\";\n    const response = await fetch(personUrl)\n    if (!response.ok ) {\n      throw new Error(\"failed to fetch data\")\n    }\n    const data = await response.json()\n    return data;\n} catch (error) {\n  console.error(\"error fetching data: \", error.message)\n  throw error;\n}\n}\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,GAAG,GAAG,iCAAiC;IAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpD,MAAMF,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,kCAAkC;IACnD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACS,QAAQ,CAAC;IACtC,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpD,MAAMF,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,SAAS,GAAG,mCAAmC;IACrD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACW,SAAS,CAAC;IACvC,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAG;MACjB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrD,MAAMF,KAAK;EACb;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}