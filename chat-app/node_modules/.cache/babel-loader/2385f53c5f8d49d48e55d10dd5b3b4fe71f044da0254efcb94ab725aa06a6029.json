{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { logOutAction, updateUserDataAction } from '../../context/auth/actions';\nimport { useNavigate } from 'react-router-dom';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport { LogoutButton } from '../Home/SettingsMenu';\nimport { updateProfile, uploadAvatar, deleteAvatar, deleteAccountService, resendVerification } from '../../api/services/userServices';\nimport { BarLoader } from 'react-spinners';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useAuthContext();\n  const {\n    user\n  } = state;\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [successUploadMessage, setSuccessUploadMessage] = useState('');\n  const [avatar, setAvatar] = useState(null);\n  const [showAttachmentBox, setShowAttachmentBox] = useState(false);\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      name: user.name || '',\n      lastName: user.lastName || '',\n      age: user.age || '',\n      email: user.email || ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required('Name is required'),\n      lastName: Yup.string().required('Last name is required'),\n      age: Yup.number().required('Age is required').positive().integer(),\n      email: Yup.string().email('Email is already used').required('Email is required')\n    }),\n    onSubmit: async values => {\n      await handleAsyncOperation(async () => {\n        const result = await updateProfile(user.userId, values, {\n          newPassword: values.newPassword,\n          confirmPassword: values.confirmPassword\n        });\n        dispatch(updateUserDataAction(result.updatedData));\n        setMessage(result.message);\n        if (result.message.includes('Password updated')) {\n          formik.resetForm({\n            values: {\n              ...values,\n              newPassword: '',\n              confirmPassword: ''\n            }\n          });\n        }\n      }, setLoading, setError);\n    }\n  });\n  const formikPassword = useFormik({\n    initialValues: {\n      newPassword: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string().min(8, 'Password must contain at least 8 characters').matches(/[A-Z]/, 'Password must contain at least one uppercase letter').matches(/[a-z]/, 'Password must contain at least one lowercase letter').matches(/[0-9]/, 'Password must contain at least one number').matches(/[@$!%*?&#]/, 'Password must contain at least one special character'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], \"Passwords don't match\")\n    }),\n    onSubmit: async values => {\n      await handleAsyncOperation(async () => {\n        const result = await updateProfile(user.userId, {\n          newPassword: values.newPassword,\n          confirmPassword: values.confirmPassword\n        });\n        setMessage(result.message);\n        if (result.message.includes('Password updated')) {\n          formikPassword.resetForm();\n        }\n      }, setLoading, setError);\n    }\n  });\n  const handleAttachmentBoxToggle = () => {\n    setShowAttachmentBox(!showAttachmentBox);\n  };\n  useEscapeKeyHandler(() => {\n    setShowAttachmentBox(false);\n  });\n  const handleAvatarChange = e => {\n    const file = e.target.files[0]; // Fix here\n    if (file) {\n      setAvatar(file);\n    }\n    console.log('File: ', file);\n  };\n  const handleUploadAvatar = async e => {\n    await handleAsyncOperation(async () => {\n      const result = await uploadAvatar(avatar);\n      setTimeout(() => {\n        setShowAttachmentBox(!showAttachmentBox);\n      }, 1000);\n      setSuccessUploadMessage(result.message);\n    }, setLoading, setError);\n  };\n  const handleDeleteAvatar = async () => {\n    await handleAsyncOperation(async () => {\n      const result = await deleteAvatar(user.userId);\n      setSuccessUploadMessage(result.message);\n    }, setLoading, setError);\n  };\n  useEffect(() => {\n    const userFromStorage = JSON.parse(localStorage.getItem('user'));\n    if (userFromStorage) {\n      formik.setValues({\n        name: userFromStorage.name || '',\n        lastName: userFromStorage.lastName || '',\n        age: userFromStorage.age || '',\n        email: userFromStorage.email || ''\n      });\n    }\n  }, [user]);\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm('Are you sure you want to delete this account?');\n    if (!confirmed) return;\n    await handleAsyncOperation(async () => {\n      await deleteAccountService(user.userId);\n      setTimeout(() => {\n        dispatch(logOutAction());\n        navigate('/');\n      }, 2000);\n      setMessage('Account deleted successfully');\n    }, setLoading, setError);\n  };\n  const handleResendVerification = async token => {\n    await handleAsyncOperation(async () => {\n      setLoading(true);\n      await resendVerification(token);\n      setMessage('Email verification sent');\n    }, setLoading, setError);\n  };\n\n  // console.log('User avatar:', user.userAvatar);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-info-modal-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formikProfile.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-photo-header\",\n        onClick: handleAttachmentBoxToggle,\n        title: \"Click to change profile picture\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar ? URL.createObjectURL(avatar) : user.userAvatar,\n          alt: \"Change Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), Object.entries(formikProfile.values).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs-update-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: key.includes('Password') ? 'password' : 'text',\n          id: key,\n          name: key,\n          value: value,\n          onChange: formikProfile.handleChange,\n          onBlur: formikProfile.handleBlur,\n          disabled: key === 'username',\n          autoComplete: key === 'password' ? 'on' : 'off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), formikProfile.touched[key] && formikProfile.errors[key] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formikProfile.errors[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this) : null, key === 'email' && !user.emailVerified && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-xmark\",\n          onClick: handleResendVerification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), key === 'email' && user.emailVerified && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-circle-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formikPassword.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            name: \"newPassword\",\n            value: formikPassword.values.newPassword,\n            onChange: formikPassword.handleChange,\n            onBlur: formikPassword.handleBlur,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), formikPassword.touched.newPassword && formikPassword.errors.newPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: formikPassword.errors.newPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs-update-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: formikPassword.values.confirmPassword,\n            onChange: formikPassword.handleChange,\n            onBlur: formikPassword.handleBlur,\n            autoComplete: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), formikPassword.touched.confirmPassword && formikPassword.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: formikPassword.errors.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), showAttachmentBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attachment-user-photo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change Profile Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"avatar\",\n          name: \"avatar\",\n          accept: \"image/*\",\n          onChange: handleAvatarChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadAvatar,\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteAvatar,\n          children: \"Delete Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), successUploadMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: successUploadMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-account-button\",\n      onClick: handleDeleteAccount,\n      children: \"Delete Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-loader\",\n        children: /*#__PURE__*/_jsxDEV(BarLoader, {\n          color: \"#fe3c72\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInfo, \"/sZKVefSgvQeSWVU4r75e4bHFCc=\", false, function () {\n  return [useAuthContext, useNavigate, useFormik, useFormik, useEscapeKeyHandler];\n});\n_c = UserInfo;\nexport default UserInfo;\nvar _c;\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useEffect","useAuthContext","logOutAction","updateUserDataAction","useNavigate","useEscapeKeyHandler","LogoutButton","updateProfile","uploadAvatar","deleteAvatar","deleteAccountService","resendVerification","BarLoader","handleAsyncOperation","useFormik","Yup","jsxDEV","_jsxDEV","UserInfo","_s","state","dispatch","user","loading","setLoading","error","setError","message","setMessage","successUploadMessage","setSuccessUploadMessage","avatar","setAvatar","showAttachmentBox","setShowAttachmentBox","navigate","formik","initialValues","name","lastName","age","email","validationSchema","object","string","required","number","positive","integer","onSubmit","values","result","userId","newPassword","confirmPassword","updatedData","includes","resetForm","formikPassword","min","matches","oneOf","ref","handleAttachmentBoxToggle","handleAvatarChange","e","file","target","files","console","log","handleUploadAvatar","setTimeout","handleDeleteAvatar","userFromStorage","JSON","parse","localStorage","getItem","setValues","handleDeleteAccount","confirmed","window","confirm","handleResendVerification","token","className","children","formikProfile","handleSubmit","onClick","title","src","URL","createObjectURL","userAvatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","Object","entries","map","key","value","htmlFor","charAt","toUpperCase","slice","type","id","onChange","handleChange","onBlur","handleBlur","disabled","autoComplete","touched","errors","emailVerified","accept","color","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/UserInfo/UserInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport { logOutAction, updateUserDataAction } from '../../context/auth/actions';\nimport { useNavigate } from 'react-router-dom';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport { LogoutButton } from '../Home/SettingsMenu';\nimport {\n  updateProfile,\n  uploadAvatar,\n  deleteAvatar,\n  deleteAccountService,\n  resendVerification,\n} from '../../api/services/userServices';\nimport { BarLoader } from 'react-spinners';\nimport { handleAsyncOperation } from '../../utils/handleAsyncOperation';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst UserInfo = () => {\n  const { state, dispatch } = useAuthContext();\n  const { user } = state;\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [successUploadMessage, setSuccessUploadMessage] = useState('');\n  const [avatar, setAvatar] = useState(null);\n  const [showAttachmentBox, setShowAttachmentBox] = useState(false);\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      name: user.name || '',\n      lastName: user.lastName || '',\n      age: user.age || '',\n      email: user.email || '',\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required('Name is required'),\n      lastName: Yup.string().required('Last name is required'),\n      age: Yup.number().required('Age is required').positive().integer(),\n      email: Yup.string()\n        .email('Email is already used')\n        .required('Email is required'),\n    }),\n    onSubmit: async(values) => {\n      await handleAsyncOperation(async () => {\n        const result = await updateProfile(user.userId, values, {\n          newPassword: values.newPassword,\n          confirmPassword: values.confirmPassword\n        });\n        dispatch(updateUserDataAction(result.updatedData));\n        setMessage(result.message);\n        if (result.message.includes('Password updated')) {\n          formik.resetForm({ values: { ...values, newPassword: '', confirmPassword: '' } });\n        }\n    }, setLoading, setError);\n  },\n});\n\nconst formikPassword = useFormik({\n  initialValues: {\n    newPassword: '',\n    confirmPassword: '',\n  },\n  validationSchema: Yup.object({\n    newPassword: Yup.string()\n      .min(8, 'Password must contain at least 8 characters')\n      .matches(/[A-Z]/, 'Password must contain at least one uppercase letter')\n      .matches(/[a-z]/, 'Password must contain at least one lowercase letter')\n      .matches(/[0-9]/, 'Password must contain at least one number')\n      .matches(/[@$!%*?&#]/, 'Password must contain at least one special character'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('newPassword'), null], \"Passwords don't match\"),\n  }),\n  onSubmit: async (values) => {\n    await handleAsyncOperation(async () => {\n      const result = await updateProfile(user.userId, {\n        newPassword: values.newPassword,\n        confirmPassword: values.confirmPassword,\n      });\n      setMessage(result.message);\n      if (result.message.includes('Password updated')) {\n        formikPassword.resetForm();\n      }\n    }, setLoading, setError);\n  },\n});\n\n  const handleAttachmentBoxToggle = () => {\n    setShowAttachmentBox(!showAttachmentBox);\n  };\n\n  useEscapeKeyHandler(() => {\n    setShowAttachmentBox(false);\n  });\n\n  const handleAvatarChange = (e) => {\n    const file = e.target.files[0]; // Fix here\n    if (file) {\n      setAvatar(file);\n    }\n    console.log('File: ', file);\n  };\n\n\n  const handleUploadAvatar = async (e) => {\n    await handleAsyncOperation(\n      async () => {\n        const result = await uploadAvatar(avatar);\n        setTimeout(() => {\n          setShowAttachmentBox(!showAttachmentBox);\n        }, 1000);\n        setSuccessUploadMessage(result.message);\n      },\n      setLoading,\n      setError,\n    );\n  };\n\n  const handleDeleteAvatar = async () => {\n    await handleAsyncOperation(\n      async () => {\n        const result = await deleteAvatar(user.userId);\n        setSuccessUploadMessage(result.message);\n      },\n      setLoading,\n      setError,\n    );\n  };\n\n  useEffect(() => {\n    const userFromStorage = JSON.parse(localStorage.getItem('user'));\n    if (userFromStorage) {\n      formik.setValues({\n        name: userFromStorage.name || '',\n        lastName: userFromStorage.lastName || '',\n        age: userFromStorage.age || '',\n        email: userFromStorage.email || '',\n      });\n    }\n  }, [user]);\n\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm(\n      'Are you sure you want to delete this account?',\n    );\n    if (!confirmed) return;\n\n    await handleAsyncOperation(\n      async () => {\n        await deleteAccountService(user.userId);\n        setTimeout(() => {\n          dispatch(logOutAction());\n          navigate('/');\n        }, 2000);\n        setMessage('Account deleted successfully');\n      },\n      setLoading,\n      setError,\n    );\n  };\n\n  const handleResendVerification = async (token) => {\n    await handleAsyncOperation(\n      async () => {\n        setLoading(true);\n        await resendVerification(token);\n        setMessage('Email verification sent');\n      },\n      setLoading,\n      setError,\n    );\n  };\n\n\n  // console.log('User avatar:', user.userAvatar);\n\n  return (\n    <div className=\"user-info-modal-wrapper\">\n      <form onSubmit={formikProfile.handleSubmit}>\n        <div className=\"user-photo-header\" onClick={handleAttachmentBoxToggle} title=\"Click to change profile picture\">\n          <img src={avatar ? URL.createObjectURL(avatar) : user.userAvatar} alt=\"Change Avatar\" />\n          <h1>{user.username}</h1>\n        </div>\n        {Object.entries(formikProfile.values).map(([key, value]) => (\n          <div className=\"form-inputs-update-profile\" key={key}>\n            <label htmlFor={key}>\n              {key.charAt(0).toUpperCase() + key.slice(1)}:\n            </label>\n            <input\n              type={key.includes('Password') ? 'password' : 'text'}\n              id={key}\n              name={key}\n              value={value}\n              onChange={formikProfile.handleChange}\n              onBlur={formikProfile.handleBlur}\n              disabled={key === 'username'}\n              autoComplete={key === 'password' ? 'on' : 'off'}\n            />\n            {formikProfile.touched[key] && formikProfile.errors[key] ? (\n              <div className=\"error\">{formikProfile.errors[key]}</div>\n            ) : null}\n            {key === 'email' && !user.emailVerified && (\n              <i className=\"fa-solid fa-circle-xmark\" onClick={handleResendVerification}></i>\n            )}\n            {key === 'email' && user.emailVerified && (\n              <i className=\"fa-solid fa-circle-check\"></i>\n            )}\n          </div>\n        ))}\n        <button type=\"submit\">Save Changes</button>\n      </form>\n\n      <form onSubmit={formikPassword.handleSubmit}>\n        <div className=\"password-section\">\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"newPassword\">New Password:</label>\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              name=\"newPassword\"\n              value={formikPassword.values.newPassword}\n              onChange={formikPassword.handleChange}\n              onBlur={formikPassword.handleBlur}\n              autoComplete=\"true\"\n            />\n            {formikPassword.touched.newPassword && formikPassword.errors.newPassword ? (\n              <div className=\"error\">{formikPassword.errors.newPassword}</div>\n            ) : null}\n          </div>\n          <div className=\"form-inputs-update-profile\">\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={formikPassword.values.confirmPassword}\n              onChange={formikPassword.handleChange}\n              onBlur={formikPassword.handleBlur}\n              autoComplete=\"true\"\n            />\n            {formikPassword.touched.confirmPassword && formikPassword.errors.confirmPassword ? (\n              <div className=\"error\">{formikPassword.errors.confirmPassword}</div>\n            ) : null}\n          </div>\n        </div>\n        <button type=\"submit\">Change Password</button>\n      </form>\n\n      {showAttachmentBox && (\n        <div className=\"page-overlay\">\n          <div className=\"attachment-user-photo-box\">\n            <h3>Change Profile Photo</h3>\n            <input\n              type=\"file\"\n              id=\"avatar\"\n              name=\"avatar\"\n              accept=\"image/*\"\n              onChange={handleAvatarChange}\n            />\n            <button onClick={handleUploadAvatar}>Upload Photo</button>\n            <button onClick={handleDeleteAvatar}>Delete Photo</button>\n            {successUploadMessage && <p>{successUploadMessage}</p>}\n          </div>\n        </div>\n      )}\n\n      <button className=\"delete-account-button\" onClick={handleDeleteAccount}>\n        Delete Account\n      </button>\n      <LogoutButton dispatch={dispatch} />\n      {message && <p>{message}</p>}\n      <div>\n        {error && <h2>{error}</h2>}\n        {loading && (\n          <div className=\"bar-loader\">\n            <BarLoader color=\"#fe3c72\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfo;\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}