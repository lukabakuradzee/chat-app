{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/Home/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport EmojiPicker from 'emoji-picker-react';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\nconst Chat = ({\n  chatMessages\n}) => {\n  _s();\n  const chatContainerRef = useRef(null);\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const {\n    state\n  } = useAuthContext();\n  const {\n    user: currentUser\n  } = state;\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const handleMessageChange = event => {\n    setInputMessage(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (inputMessage.trim() === '') {\n      return; // Prevent sending empty messages\n    }\n    // Add the message to the list of messages\n    setMessages([...messages, {\n      text: inputMessage,\n      sender: currentUser.userName\n    }]);\n    // Clear the input field\n    setInputMessage('');\n  };\n  const handleFormSubmit = event => {\n    if (event) {\n      event.preventDefault();\n      handleSubmit(event);\n    }\n  };\n  useEffect(() => {\n    // Scroll chat container to the bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on(\"chat message\", msg => {\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n\n    // Clean up socket connection\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const sendMessage = () => {\n    socket.emit(\"chat message\", message);\n    setMessage(\"\");\n  };\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(prevState => !prevState);\n  };\n  useEscapeKeyHandler(() => {\n    setShowEmojiPicker(false);\n  });\n  const handleEmojiClick = emoji => {\n    setInputMessage(inputMessage + emoji);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emoji-picker-container\",\n      children: showEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onEmojiClick: emojiObject => handleEmojiClick(emojiObject.emoji),\n        disableAutoFocus: true,\n        style: {\n          height: '400px',\n          backgroundColor: '#fe3c72',\n          borderStyle: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatContainerRef,\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === currentUser.userName ? 'current-user' : 'other-user'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sender\",\n          children: currentUser.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), \":\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-text-chat\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: inputMessage,\n        onChange: handleMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-solid fa-face-smile emoji-icon-click\",\n        onClick: toggleEmojiPicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-message-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"rM82fQBpoHeMYnQvJRRVopSvriY=\", false, function () {\n  return [useAuthContext, useEscapeKeyHandler];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuthContext","EmojiPicker","useEscapeKeyHandler","io","jsxDEV","_jsxDEV","socket","Chat","chatMessages","_s","chatContainerRef","inputMessage","setInputMessage","messages","setMessages","state","user","currentUser","showEmojiPicker","setShowEmojiPicker","handleMessageChange","event","target","value","handleSubmit","preventDefault","trim","text","sender","userName","handleFormSubmit","current","scrollTop","scrollHeight","on","msg","prevMessages","disconnect","sendMessage","emit","message","setMessage","toggleEmojiPicker","prevState","handleEmojiClick","emoji","className","children","onEmojiClick","emojiObject","disableAutoFocus","style","height","backgroundColor","borderStyle","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","index","onSubmit","type","placeholder","onChange","class","onClick","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/pages/Home/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuthContext } from '../../context/auth/AuthContextProvider';\nimport EmojiPicker from 'emoji-picker-react';\nimport useEscapeKeyHandler from '../../Hooks/EscapeHandler';\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:4000\");\n\n\nconst Chat = ({ chatMessages }) => {\n  const chatContainerRef = useRef(null);\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const { state } = useAuthContext();\n  const { user: currentUser } = state;\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n  const handleMessageChange = (event) => {\n    setInputMessage(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (inputMessage.trim() === '') {\n      return; // Prevent sending empty messages\n    }\n    // Add the message to the list of messages\n    setMessages([\n      ...messages,\n      { text: inputMessage, sender: currentUser.userName },\n    ]);\n    // Clear the input field\n    setInputMessage('');\n  };\n\n  const handleFormSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n      handleSubmit(event);\n    }\n  };\n\n  useEffect(() => {\n    // Scroll chat container to the bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop =\n        chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on(\"chat message\", (msg) => {\n      setMessages((prevMessages) => [...prevMessages, msg]);\n    });\n\n    // Clean up socket connection\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    socket.emit(\"chat message\", message);\n    setMessage(\"\");\n  };\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker((prevState) => !prevState);\n  };\n\n  useEscapeKeyHandler(() => {\n    setShowEmojiPicker(false);\n  });\n\n  const handleEmojiClick = (emoji) => {\n    setInputMessage(inputMessage + emoji);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"emoji-picker-container\">\n        {showEmojiPicker && (\n          <EmojiPicker\n            onEmojiClick={(emojiObject) => handleEmojiClick(emojiObject.emoji)}\n            disableAutoFocus={true}\n            style={{\n              height: '400px',\n              backgroundColor: '#fe3c72',\n              borderStyle: 'none',\n            }}\n          />\n        )}\n      </div>\n      <div ref={chatContainerRef} className=\"chat-messages\">\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={`message ${msg.sender === currentUser.userName ? 'current-user' : 'other-user'}`}\n          >\n            <span className=\"sender\">{currentUser.userName}</span>:{' '}\n            <span className=\"message-text-chat\">{msg.text}</span>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleFormSubmit} className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={inputMessage}\n          onChange={handleMessageChange}\n        />\n\n        <i\n          class=\"fa-solid fa-face-smile emoji-icon-click\"\n          onClick={toggleEmojiPicker}\n        ></i>\n\n        <button type=\"submit\" className=\"send-message-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}