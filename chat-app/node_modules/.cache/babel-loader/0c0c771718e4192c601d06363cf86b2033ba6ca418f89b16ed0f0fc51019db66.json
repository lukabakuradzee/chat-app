{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshi/Desktop/chat-app/chat-app/src/components/ResetPasswordForm/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgetPasswordModal = ({\n  onClose\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  handle;\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Call your function to handle forget password logic here, passing the email state\n    onClose(); // Close the modal after submitting\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Recovery Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgetPasswordModal, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c = ForgetPasswordModal;\nexport default ForgetPasswordModal;\nvar _c;\n$RefreshReg$(_c, \"ForgetPasswordModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgetPasswordModal","onClose","_s","email","setEmail","handle","handleSubmit","e","preventDefault","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/macintoshi/Desktop/chat-app/chat-app/src/components/ResetPasswordForm/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ForgetPasswordModal = ({ onClose }) => {\n  const [email, setEmail] = useState('');\n  handle\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Call your function to handle forget password logic here, passing the email state\n    onClose(); // Close the modal after submitting\n  };\n\n  return (\n    \n    <div className=\"password-reset-modal\">\n      <div className=\"modal-content\">\n        <span className=\"close\" onClick={onClose}>&times;</span>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"email\">Recovery Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgetPasswordModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtCQ,MAAM;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAP,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC;EAED,oBAEEF,OAAA;IAAKU,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnCX,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BX,OAAA;QAAMU,SAAS,EAAC,OAAO;QAACE,OAAO,EAAEV,OAAQ;QAAAS,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxDhB,OAAA;QAAMiB,QAAQ,EAAEV,YAAa;QAAAI,QAAA,gBAC3BX,OAAA;UAAOkB,OAAO,EAAC,OAAO;UAAAP,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7ChB,OAAA;UACEmB,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,OAAO;UACVC,KAAK,EAAEjB,KAAM;UACbkB,QAAQ,EAAGd,CAAC,IAAKH,QAAQ,CAACG,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFhB,OAAA;UAAQmB,IAAI,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CA7BIF,mBAAmB;AAAAwB,EAAA,GAAnBxB,mBAAmB;AA+BzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}